
stdiodemo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800100  000015e2  00001676  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000015e2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000059  00800174  00800174  000016ea  2**0
                  ALLOC
  3 .stab         00000378  00000000  00000000  000016ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000071  00000000  00000000  00001a64  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000080  00000000  00000000  00001ad5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000106  00000000  00000000  00001b55  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000a9d  00000000  00000000  00001c5b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000056a  00000000  00000000  000026f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000008d2  00000000  00000000  00002c62  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000110  00000000  00000000  00003534  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000247  00000000  00000000  00003644  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000002e5  00000000  00000000  0000388b  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 40 00 	jmp	0x80	; 0x80 <__ctors_end>
       4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
       8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
       c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      68:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      6c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

00000070 <__c.1629>:
      70:	45 6e 74 65 72 20 63 6f 6d 6d 61 6e 64 3a 20 00     Enter command: .

00000080 <__ctors_end>:
      80:	11 24       	eor	r1, r1
      82:	1f be       	out	0x3f, r1	; 63
      84:	cf ef       	ldi	r28, 0xFF	; 255
      86:	d0 e1       	ldi	r29, 0x10	; 16
      88:	de bf       	out	0x3e, r29	; 62
      8a:	cd bf       	out	0x3d, r28	; 61

0000008c <__do_copy_data>:
      8c:	11 e0       	ldi	r17, 0x01	; 1
      8e:	a0 e0       	ldi	r26, 0x00	; 0
      90:	b1 e0       	ldi	r27, 0x01	; 1
      92:	e2 ee       	ldi	r30, 0xE2	; 226
      94:	f5 e1       	ldi	r31, 0x15	; 21
      96:	02 c0       	rjmp	.+4      	; 0x9c <.do_copy_data_start>

00000098 <.do_copy_data_loop>:
      98:	05 90       	lpm	r0, Z+
      9a:	0d 92       	st	X+, r0

0000009c <.do_copy_data_start>:
      9c:	a4 37       	cpi	r26, 0x74	; 116
      9e:	b1 07       	cpc	r27, r17
      a0:	d9 f7       	brne	.-10     	; 0x98 <.do_copy_data_loop>

000000a2 <__do_clear_bss>:
      a2:	11 e0       	ldi	r17, 0x01	; 1
      a4:	a4 e7       	ldi	r26, 0x74	; 116
      a6:	b1 e0       	ldi	r27, 0x01	; 1
      a8:	01 c0       	rjmp	.+2      	; 0xac <.do_clear_bss_start>

000000aa <.do_clear_bss_loop>:
      aa:	1d 92       	st	X+, r1

000000ac <.do_clear_bss_start>:
      ac:	ad 3c       	cpi	r26, 0xCD	; 205
      ae:	b1 07       	cpc	r27, r17
      b0:	e1 f7       	brne	.-8      	; 0xaa <.do_clear_bss_loop>
      b2:	0e 94 69 00 	call	0xd2	; 0xd2 <main>
      b6:	0c 94 f0 0a 	jmp	0x15e0	; 0x15e0 <_exit>

000000ba <__bad_interrupt>:
      ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <delay_1s>:
FILE lcd_str = FDEV_SETUP_STREAM(lcd_putchar, NULL, _FDEV_SETUP_WRITE);

static void
delay_1s(void)
{
      be:	20 e0       	ldi	r18, 0x00	; 0
      c0:	e0 e2       	ldi	r30, 0x20	; 32
      c2:	fe e4       	ldi	r31, 0x4E	; 78
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
      c4:	cf 01       	movw	r24, r30
      c6:	01 97       	sbiw	r24, 0x01	; 1
      c8:	f1 f7       	brne	.-4      	; 0xc6 <delay_1s+0x8>
  uint8_t i;

  for (i = 0; i < 100; i++)
      ca:	2f 5f       	subi	r18, 0xFF	; 255
      cc:	24 36       	cpi	r18, 0x64	; 100
      ce:	d1 f7       	brne	.-12     	; 0xc4 <delay_1s+0x6>
      d0:	08 95       	ret

000000d2 <main>:
    _delay_ms(10);
}

int
main(void)
{
      d2:	8f 92       	push	r8
      d4:	9f 92       	push	r9
      d6:	af 92       	push	r10
      d8:	bf 92       	push	r11
      da:	cf 92       	push	r12
      dc:	df 92       	push	r13
      de:	ef 92       	push	r14
      e0:	ff 92       	push	r15
      e2:	0f 93       	push	r16
      e4:	1f 93       	push	r17
      e6:	cf 93       	push	r28
      e8:	df 93       	push	r29
      ea:	cd b7       	in	r28, 0x3d	; 61
      ec:	de b7       	in	r29, 0x3e	; 62
      ee:	a8 97       	sbiw	r28, 0x28	; 40
      f0:	0f b6       	in	r0, 0x3f	; 63
      f2:	f8 94       	cli
      f4:	de bf       	out	0x3e, r29	; 62
      f6:	0f be       	out	0x3f, r0	; 63
      f8:	cd bf       	out	0x3d, r28	; 61
  uint8_t i;
  char buf[20], s[20];

    CLKPR = _BV(CLKPCE); // enable clock scalar update
      fa:	80 e8       	ldi	r24, 0x80	; 128
      fc:	80 93 61 00 	sts	0x0061, r24
    CLKPR = 0x00;		// set to 8Mhz
     100:	10 92 61 00 	sts	0x0061, r1
     104:	0e 94 2c 02 	call	0x458	; 0x458 <uart_init>
     108:	0e 94 17 02 	call	0x42e	; 0x42e <lcd_init>

  ioinit();

  stdout = stdin = &uart_str;
     10c:	30 e5       	ldi	r19, 0x50	; 80
     10e:	83 2e       	mov	r8, r19
     110:	31 e0       	ldi	r19, 0x01	; 1
     112:	93 2e       	mov	r9, r19
     114:	90 92 c8 01 	sts	0x01C8, r9
     118:	80 92 c7 01 	sts	0x01C7, r8
     11c:	90 92 ca 01 	sts	0x01CA, r9
     120:	80 92 c9 01 	sts	0x01C9, r8
  stderr = &lcd_str;
     124:	2e e5       	ldi	r18, 0x5E	; 94
     126:	a2 2e       	mov	r10, r18
     128:	21 e0       	ldi	r18, 0x01	; 1
     12a:	b2 2e       	mov	r11, r18
     12c:	b0 92 cc 01 	sts	0x01CC, r11
     130:	a0 92 cb 01 	sts	0x01CB, r10

  fprintf(stderr, "Hello world!\n");
     134:	95 01       	movw	r18, r10
     136:	4d e0       	ldi	r20, 0x0D	; 13
     138:	50 e0       	ldi	r21, 0x00	; 0
     13a:	61 e0       	ldi	r22, 0x01	; 1
     13c:	70 e0       	ldi	r23, 0x00	; 0
     13e:	80 e0       	ldi	r24, 0x00	; 0
     140:	91 e0       	ldi	r25, 0x01	; 1
     142:	0e 94 b7 03 	call	0x76e	; 0x76e <fwrite>
     146:	90 e7       	ldi	r25, 0x70	; 112
     148:	c9 2e       	mov	r12, r25
     14a:	90 e0       	ldi	r25, 0x00	; 0
     14c:	d9 2e       	mov	r13, r25
     14e:	85 e1       	ldi	r24, 0x15	; 21
     150:	e8 2e       	mov	r14, r24
     152:	f1 2c       	mov	r15, r1
     154:	ec 0e       	add	r14, r28
     156:	fd 1e       	adc	r15, r29

  for (;;)
    {
      printf_P(PSTR("Enter command: "));
     158:	df 92       	push	r13
     15a:	cf 92       	push	r12
     15c:	0e 94 18 04 	call	0x830	; 0x830 <printf_P>
      if (fgets(buf, sizeof buf - 1, stdin) == NULL)
     160:	40 91 c7 01 	lds	r20, 0x01C7
     164:	50 91 c8 01 	lds	r21, 0x01C8
     168:	63 e1       	ldi	r22, 0x13	; 19
     16a:	70 e0       	ldi	r23, 0x00	; 0
     16c:	c7 01       	movw	r24, r14
     16e:	0e 94 39 03 	call	0x672	; 0x672 <fgets>
     172:	0f 90       	pop	r0
     174:	0f 90       	pop	r0
     176:	89 2b       	or	r24, r25
     178:	09 f4       	brne	.+2      	; 0x17c <main+0xaa>
     17a:	6e c0       	rjmp	.+220    	; 0x258 <main+0x186>
	break;
      if (tolower(buf[0]) == 'q')
     17c:	8d 89       	ldd	r24, Y+21	; 0x15
     17e:	99 27       	eor	r25, r25
     180:	0e 94 8d 0a 	call	0x151a	; 0x151a <tolower>
     184:	81 37       	cpi	r24, 0x71	; 113
     186:	91 05       	cpc	r25, r1
     188:	09 f4       	brne	.+2      	; 0x18c <main+0xba>
     18a:	66 c0       	rjmp	.+204    	; 0x258 <main+0x186>
	break;

      switch (tolower(buf[0]))
     18c:	8c 36       	cpi	r24, 0x6C	; 108
     18e:	91 05       	cpc	r25, r1
     190:	81 f0       	breq	.+32     	; 0x1b2 <main+0xe0>
     192:	85 37       	cpi	r24, 0x75	; 117
     194:	91 05       	cpc	r25, r1
     196:	f1 f1       	breq	.+124    	; 0x214 <main+0x142>
	{
	default:
	  printf("Unknown command: %s\n", buf);
     198:	ff 92       	push	r15
     19a:	ef 92       	push	r14
     19c:	8e e0       	ldi	r24, 0x0E	; 14
     19e:	91 e0       	ldi	r25, 0x01	; 1
     1a0:	9f 93       	push	r25
     1a2:	8f 93       	push	r24
     1a4:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <printf>
	  break;
     1a8:	0f 90       	pop	r0
     1aa:	0f 90       	pop	r0
     1ac:	0f 90       	pop	r0
     1ae:	0f 90       	pop	r0
     1b0:	d3 cf       	rjmp	.-90     	; 0x158 <main+0x86>

	case 'l':
	  if (sscanf(buf, "%*s %s", s) > 0)
     1b2:	8e 01       	movw	r16, r28
     1b4:	0f 5f       	subi	r16, 0xFF	; 255
     1b6:	1f 4f       	sbci	r17, 0xFF	; 255
     1b8:	1f 93       	push	r17
     1ba:	0f 93       	push	r16
     1bc:	83 e2       	ldi	r24, 0x23	; 35
     1be:	91 e0       	ldi	r25, 0x01	; 1
     1c0:	9f 93       	push	r25
     1c2:	8f 93       	push	r24
     1c4:	ff 92       	push	r15
     1c6:	ef 92       	push	r14
     1c8:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <sscanf>
     1cc:	2d b7       	in	r18, 0x3d	; 61
     1ce:	3e b7       	in	r19, 0x3e	; 62
     1d0:	2a 5f       	subi	r18, 0xFA	; 250
     1d2:	3f 4f       	sbci	r19, 0xFF	; 255
     1d4:	0f b6       	in	r0, 0x3f	; 63
     1d6:	f8 94       	cli
     1d8:	3e bf       	out	0x3e, r19	; 62
     1da:	0f be       	out	0x3f, r0	; 63
     1dc:	2d bf       	out	0x3d, r18	; 61
     1de:	18 16       	cp	r1, r24
     1e0:	19 06       	cpc	r1, r25
     1e2:	0c f0       	brlt	.+2      	; 0x1e6 <main+0x114>
     1e4:	56 c0       	rjmp	.+172    	; 0x292 <main+0x1c0>
	    {
	      fprintf(&lcd_str, "Got %s\n", s);
     1e6:	1f 93       	push	r17
     1e8:	0f 93       	push	r16
     1ea:	8a e2       	ldi	r24, 0x2A	; 42
     1ec:	91 e0       	ldi	r25, 0x01	; 1
     1ee:	9f 93       	push	r25
     1f0:	8f 93       	push	r24
     1f2:	bf 92       	push	r11
     1f4:	af 92       	push	r10
	      printf("OK\n");
	    }
	  else
	    {
	      printf("sscanf() failed\n");
	    }
	  break;

	case 'u':
	  if (sscanf(buf, "%*s %s", s) > 0)
	    {
	      fprintf(&uart_str, "Got %s\n", s);
     1f6:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <fprintf>
	      printf("OK\n");
     1fa:	82 e3       	ldi	r24, 0x32	; 50
     1fc:	91 e0       	ldi	r25, 0x01	; 1
     1fe:	0e 94 47 04 	call	0x88e	; 0x88e <puts>
     202:	8d b7       	in	r24, 0x3d	; 61
     204:	9e b7       	in	r25, 0x3e	; 62
     206:	06 96       	adiw	r24, 0x06	; 6
     208:	0f b6       	in	r0, 0x3f	; 63
     20a:	f8 94       	cli
     20c:	9e bf       	out	0x3e, r25	; 62
     20e:	0f be       	out	0x3f, r0	; 63
     210:	8d bf       	out	0x3d, r24	; 61
     212:	a2 cf       	rjmp	.-188    	; 0x158 <main+0x86>
     214:	8e 01       	movw	r16, r28
     216:	0f 5f       	subi	r16, 0xFF	; 255
     218:	1f 4f       	sbci	r17, 0xFF	; 255
     21a:	1f 93       	push	r17
     21c:	0f 93       	push	r16
     21e:	83 e2       	ldi	r24, 0x23	; 35
     220:	91 e0       	ldi	r25, 0x01	; 1
     222:	9f 93       	push	r25
     224:	8f 93       	push	r24
     226:	ff 92       	push	r15
     228:	ef 92       	push	r14
     22a:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <sscanf>
     22e:	2d b7       	in	r18, 0x3d	; 61
     230:	3e b7       	in	r19, 0x3e	; 62
     232:	2a 5f       	subi	r18, 0xFA	; 250
     234:	3f 4f       	sbci	r19, 0xFF	; 255
     236:	0f b6       	in	r0, 0x3f	; 63
     238:	f8 94       	cli
     23a:	3e bf       	out	0x3e, r19	; 62
     23c:	0f be       	out	0x3f, r0	; 63
     23e:	2d bf       	out	0x3d, r18	; 61
     240:	18 16       	cp	r1, r24
     242:	19 06       	cpc	r1, r25
     244:	34 f5       	brge	.+76     	; 0x292 <main+0x1c0>
     246:	1f 93       	push	r17
     248:	0f 93       	push	r16
     24a:	8a e2       	ldi	r24, 0x2A	; 42
     24c:	91 e0       	ldi	r25, 0x01	; 1
     24e:	9f 93       	push	r25
     250:	8f 93       	push	r24
     252:	9f 92       	push	r9
     254:	8f 92       	push	r8
     256:	cf cf       	rjmp	.-98     	; 0x1f6 <main+0x124>
	    }
	  else
	    {
	      printf("sscanf() failed\n");
	    }
	  break;
	}
    }
  fprintf(stderr, "Bye-bye");
     258:	20 91 cb 01 	lds	r18, 0x01CB
     25c:	30 91 cc 01 	lds	r19, 0x01CC
     260:	47 e0       	ldi	r20, 0x07	; 7
     262:	50 e0       	ldi	r21, 0x00	; 0
     264:	61 e0       	ldi	r22, 0x01	; 1
     266:	70 e0       	ldi	r23, 0x00	; 0
     268:	85 e4       	ldi	r24, 0x45	; 69
     26a:	91 e0       	ldi	r25, 0x01	; 1
     26c:	0e 94 b7 03 	call	0x76e	; 0x76e <fwrite>
  delay_1s();
     270:	0e 94 5f 00 	call	0xbe	; 0xbe <delay_1s>
     274:	10 e0       	ldi	r17, 0x00	; 0
  for (i = 0; i < 3; i++)
    {
      putc('.', stderr);
     276:	60 91 cb 01 	lds	r22, 0x01CB
     27a:	70 91 cc 01 	lds	r23, 0x01CC
     27e:	8e e2       	ldi	r24, 0x2E	; 46
     280:	90 e0       	ldi	r25, 0x00	; 0
     282:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
      delay_1s();
     286:	0e 94 5f 00 	call	0xbe	; 0xbe <delay_1s>
     28a:	1f 5f       	subi	r17, 0xFF	; 255
     28c:	13 30       	cpi	r17, 0x03	; 3
     28e:	99 f7       	brne	.-26     	; 0x276 <main+0x1a4>
     290:	05 c0       	rjmp	.+10     	; 0x29c <main+0x1ca>
     292:	85 e3       	ldi	r24, 0x35	; 53
     294:	91 e0       	ldi	r25, 0x01	; 1
     296:	0e 94 47 04 	call	0x88e	; 0x88e <puts>
     29a:	5e cf       	rjmp	.-324    	; 0x158 <main+0x86>
    }
  fprintf(stderr, "\n ");
     29c:	20 91 cb 01 	lds	r18, 0x01CB
     2a0:	30 91 cc 01 	lds	r19, 0x01CC
     2a4:	42 e0       	ldi	r20, 0x02	; 2
     2a6:	50 e0       	ldi	r21, 0x00	; 0
     2a8:	61 e0       	ldi	r22, 0x01	; 1
     2aa:	70 e0       	ldi	r23, 0x00	; 0
     2ac:	8d e4       	ldi	r24, 0x4D	; 77
     2ae:	91 e0       	ldi	r25, 0x01	; 1
     2b0:	0e 94 b7 03 	call	0x76e	; 0x76e <fwrite>

  return 0;
}
     2b4:	80 e0       	ldi	r24, 0x00	; 0
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	a8 96       	adiw	r28, 0x28	; 40
     2ba:	0f b6       	in	r0, 0x3f	; 63
     2bc:	f8 94       	cli
     2be:	de bf       	out	0x3e, r29	; 62
     2c0:	0f be       	out	0x3f, r0	; 63
     2c2:	cd bf       	out	0x3d, r28	; 61
     2c4:	df 91       	pop	r29
     2c6:	cf 91       	pop	r28
     2c8:	1f 91       	pop	r17
     2ca:	0f 91       	pop	r16
     2cc:	ff 90       	pop	r15
     2ce:	ef 90       	pop	r14
     2d0:	df 90       	pop	r13
     2d2:	cf 90       	pop	r12
     2d4:	bf 90       	pop	r11
     2d6:	af 90       	pop	r10
     2d8:	9f 90       	pop	r9
     2da:	8f 90       	pop	r8
     2dc:	08 95       	ret

000002de <hd44780_outnibble>:
 * Send one nibble out to the LCD controller.
 */
static void
hd44780_outnibble(uint8_t n, uint8_t rs)
{
     2de:	98 2f       	mov	r25, r24
  uint8_t x;

  HD44780_PORTOUT &= ~_BV(HD44780_RW);
     2e0:	14 98       	cbi	0x02, 4	; 2
  if (rs)
     2e2:	66 23       	and	r22, r22
     2e4:	11 f0       	breq	.+4      	; 0x2ea <hd44780_outnibble+0xc>
    HD44780_PORTOUT |= _BV(HD44780_RS);
     2e6:	16 9a       	sbi	0x02, 6	; 2
     2e8:	01 c0       	rjmp	.+2      	; 0x2ec <hd44780_outnibble+0xe>
  else
    HD44780_PORTOUT &= ~_BV(HD44780_RS);
     2ea:	16 98       	cbi	0x02, 6	; 2
  x = (HD44780_PORTOUT & ~HD44780_DATABITS) | ((n << HD44780_D4) & HD44780_DATABITS);
     2ec:	82 b1       	in	r24, 0x02	; 2
     2ee:	80 7f       	andi	r24, 0xF0	; 240
     2f0:	9f 70       	andi	r25, 0x0F	; 15
     2f2:	89 2b       	or	r24, r25
  HD44780_PORTOUT = x;
     2f4:	82 b9       	out	0x02, r24	; 2
     2f6:	15 9a       	sbi	0x02, 5	; 2
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     2f8:	81 e0       	ldi	r24, 0x01	; 1
     2fa:	8a 95       	dec	r24
     2fc:	f1 f7       	brne	.-4      	; 0x2fa <hd44780_outnibble+0x1c>
     2fe:	15 98       	cbi	0x02, 5	; 2
     300:	08 95       	ret

00000302 <hd44780_outbyte>:
  (void)hd44780_pulse_e(false);
}

/*
 * Send one byte to the LCD controller.  As we are in 4-bit mode, we
 * have to send two nibbles.
 */
void
hd44780_outbyte(uint8_t b, uint8_t rs)
{
     302:	0f 93       	push	r16
     304:	1f 93       	push	r17
     306:	08 2f       	mov	r16, r24
     308:	16 2f       	mov	r17, r22
  hd44780_outnibble(b >> 4, rs);
     30a:	82 95       	swap	r24
     30c:	8f 70       	andi	r24, 0x0F	; 15
     30e:	0e 94 6f 01 	call	0x2de	; 0x2de <hd44780_outnibble>
  hd44780_outnibble(b & 0xf, rs);
     312:	61 2f       	mov	r22, r17
     314:	80 2f       	mov	r24, r16
     316:	8f 70       	andi	r24, 0x0F	; 15
     318:	0e 94 6f 01 	call	0x2de	; 0x2de <hd44780_outnibble>
     31c:	1f 91       	pop	r17
     31e:	0f 91       	pop	r16
     320:	08 95       	ret

00000322 <hd44780_innibble>:
}

/*
 * Read one nibble from the LCD controller.
 */
static uint8_t
hd44780_innibble(uint8_t rs)
{
     322:	14 9a       	sbi	0x02, 4	; 2
  uint8_t x;

  HD44780_PORTOUT |= _BV(HD44780_RW);
  HD44780_DDR &= ~HD44780_DATABITS;
     324:	91 b1       	in	r25, 0x01	; 1
     326:	90 7f       	andi	r25, 0xF0	; 240
     328:	91 b9       	out	0x01, r25	; 1
  if (rs)
     32a:	88 23       	and	r24, r24
     32c:	11 f0       	breq	.+4      	; 0x332 <hd44780_innibble+0x10>
    HD44780_PORTOUT |= _BV(HD44780_RS);
     32e:	16 9a       	sbi	0x02, 6	; 2
     330:	01 c0       	rjmp	.+2      	; 0x334 <hd44780_innibble+0x12>
  else
    HD44780_PORTOUT &= ~_BV(HD44780_RS);
     332:	16 98       	cbi	0x02, 6	; 2
     334:	15 9a       	sbi	0x02, 5	; 2
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     336:	81 e0       	ldi	r24, 0x01	; 1
     338:	8a 95       	dec	r24
     33a:	f1 f7       	brne	.-4      	; 0x338 <hd44780_innibble+0x16>
     33c:	80 b1       	in	r24, 0x00	; 0
     33e:	15 98       	cbi	0x02, 5	; 2
  x = hd44780_pulse_e(true);
  HD44780_DDR |= HD44780_DATABITS;
     340:	91 b1       	in	r25, 0x01	; 1
     342:	9f 60       	ori	r25, 0x0F	; 15
     344:	91 b9       	out	0x01, r25	; 1
  HD44780_PORTOUT &= ~_BV(HD44780_RW);
     346:	14 98       	cbi	0x02, 4	; 2
     348:	8f 70       	andi	r24, 0x0F	; 15

  return (x & HD44780_DATABITS) >> HD44780_D4;
}
     34a:	99 27       	eor	r25, r25
     34c:	08 95       	ret

0000034e <hd44780_inbyte>:

/*
 * Read one byte (i.e. two nibbles) from the LCD controller.
 */
uint8_t
hd44780_inbyte(uint8_t rs)
{
     34e:	0f 93       	push	r16
     350:	1f 93       	push	r17
     352:	08 2f       	mov	r16, r24
  uint8_t x;

  x = hd44780_innibble(rs) << 4;
     354:	0e 94 91 01 	call	0x322	; 0x322 <hd44780_innibble>
     358:	18 2f       	mov	r17, r24
     35a:	12 95       	swap	r17
     35c:	10 7f       	andi	r17, 0xF0	; 240
  x |= hd44780_innibble(rs);
     35e:	80 2f       	mov	r24, r16
     360:	0e 94 91 01 	call	0x322	; 0x322 <hd44780_innibble>
     364:	18 2b       	or	r17, r24

  return x;
}
     366:	81 2f       	mov	r24, r17
     368:	99 27       	eor	r25, r25
     36a:	1f 91       	pop	r17
     36c:	0f 91       	pop	r16
     36e:	08 95       	ret

00000370 <hd44780_wait_ready>:

/*
 * Wait until the busy flag is cleared.
 */
void
hd44780_wait_ready(void)
{
     370:	80 e0       	ldi	r24, 0x00	; 0
     372:	0e 94 a7 01 	call	0x34e	; 0x34e <hd44780_inbyte>
     376:	87 fd       	sbrc	r24, 7
     378:	fb cf       	rjmp	.-10     	; 0x370 <hd44780_wait_ready>
     37a:	08 95       	ret

0000037c <hd44780_init>:
  while (hd44780_incmd() & HD44780_BUSYFLAG) ;
}

/*
 * Initialize the LCD controller.
 *
 * The initialization sequence has a mandatory timing so the
 * controller can safely recognize the type of interface desired.
 * This is the only area where timed waits are really needed as
 * the busy flag cannot be probed initially.
 */
void
hd44780_init(void)
{
     37c:	8f e7       	ldi	r24, 0x7F	; 127
     37e:	81 b9       	out	0x01, r24	; 1
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     380:	80 e3       	ldi	r24, 0x30	; 48
     382:	95 e7       	ldi	r25, 0x75	; 117
     384:	01 97       	sbiw	r24, 0x01	; 1
     386:	f1 f7       	brne	.-4      	; 0x384 <hd44780_init+0x8>

  HD44780_DDR = _BV(HD44780_RS) | _BV(HD44780_RW) | _BV(HD44780_E)
    | HD44780_DATABITS;

  _delay_ms(15);		/* 40 ms needed for Vcc = 2.7 V */
  hd44780_outnibble(HD44780_FNSET(1, 0, 0) >> 4, 0);
     388:	60 e0       	ldi	r22, 0x00	; 0
     38a:	83 e0       	ldi	r24, 0x03	; 3
     38c:	0e 94 6f 01 	call	0x2de	; 0x2de <hd44780_outnibble>
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     390:	88 e0       	ldi	r24, 0x08	; 8
     392:	90 e2       	ldi	r25, 0x20	; 32
     394:	01 97       	sbiw	r24, 0x01	; 1
     396:	f1 f7       	brne	.-4      	; 0x394 <hd44780_init+0x18>
  _delay_ms(4.1);
  hd44780_outnibble(HD44780_FNSET(1, 0, 0) >> 4, 0);
     398:	60 e0       	ldi	r22, 0x00	; 0
     39a:	83 e0       	ldi	r24, 0x03	; 3
     39c:	0e 94 6f 01 	call	0x2de	; 0x2de <hd44780_outnibble>
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     3a0:	88 ec       	ldi	r24, 0xC8	; 200
     3a2:	90 e0       	ldi	r25, 0x00	; 0
     3a4:	01 97       	sbiw	r24, 0x01	; 1
     3a6:	f1 f7       	brne	.-4      	; 0x3a4 <hd44780_init+0x28>
  _delay_ms(0.1);
  hd44780_outnibble(HD44780_FNSET(1, 0, 0) >> 4, 0);
     3a8:	60 e0       	ldi	r22, 0x00	; 0
     3aa:	83 e0       	ldi	r24, 0x03	; 3
     3ac:	0e 94 6f 01 	call	0x2de	; 0x2de <hd44780_outnibble>

  hd44780_outnibble(HD44780_FNSET(0, 1, 0) >> 4, 0);
     3b0:	60 e0       	ldi	r22, 0x00	; 0
     3b2:	82 e0       	ldi	r24, 0x02	; 2
     3b4:	0e 94 6f 01 	call	0x2de	; 0x2de <hd44780_outnibble>
  hd44780_wait_ready();
     3b8:	0e 94 b8 01 	call	0x370	; 0x370 <hd44780_wait_ready>
  hd44780_outcmd(HD44780_FNSET(0, 1, 0));
     3bc:	60 e0       	ldi	r22, 0x00	; 0
     3be:	88 e2       	ldi	r24, 0x28	; 40
     3c0:	0e 94 81 01 	call	0x302	; 0x302 <hd44780_outbyte>
  hd44780_wait_ready();
     3c4:	0e 94 b8 01 	call	0x370	; 0x370 <hd44780_wait_ready>
  hd44780_outcmd(HD44780_DISPCTL(0, 0, 0));
     3c8:	60 e0       	ldi	r22, 0x00	; 0
     3ca:	88 e0       	ldi	r24, 0x08	; 8
     3cc:	0e 94 81 01 	call	0x302	; 0x302 <hd44780_outbyte>
  hd44780_wait_ready();
     3d0:	0e 94 b8 01 	call	0x370	; 0x370 <hd44780_wait_ready>
     3d4:	08 95       	ret

000003d6 <lcd_putchar>:
 * the next character will first clear the display.
 */
int
lcd_putchar(char c, FILE *unused)
{
     3d6:	1f 93       	push	r17
     3d8:	18 2f       	mov	r17, r24
  static bool nl_seen;

  if (nl_seen && c != '\n')
     3da:	80 91 74 01 	lds	r24, 0x0174
     3de:	88 23       	and	r24, r24
     3e0:	e9 f0       	breq	.+58     	; 0x41c <lcd_putchar+0x46>
     3e2:	1a 30       	cpi	r17, 0x0A	; 10
     3e4:	e9 f0       	breq	.+58     	; 0x420 <lcd_putchar+0x4a>
    {
      /*
       * First character after newline, clear display and home cursor.
       */
      hd44780_wait_ready();
     3e6:	0e 94 b8 01 	call	0x370	; 0x370 <hd44780_wait_ready>
      hd44780_outcmd(HD44780_CLR);
     3ea:	60 e0       	ldi	r22, 0x00	; 0
     3ec:	81 e0       	ldi	r24, 0x01	; 1
     3ee:	0e 94 81 01 	call	0x302	; 0x302 <hd44780_outbyte>
      hd44780_wait_ready();
     3f2:	0e 94 b8 01 	call	0x370	; 0x370 <hd44780_wait_ready>
      hd44780_outcmd(HD44780_HOME);
     3f6:	60 e0       	ldi	r22, 0x00	; 0
     3f8:	82 e0       	ldi	r24, 0x02	; 2
     3fa:	0e 94 81 01 	call	0x302	; 0x302 <hd44780_outbyte>
      hd44780_wait_ready();
     3fe:	0e 94 b8 01 	call	0x370	; 0x370 <hd44780_wait_ready>
      hd44780_outcmd(HD44780_DDADDR(0));
     402:	60 e0       	ldi	r22, 0x00	; 0
     404:	80 e8       	ldi	r24, 0x80	; 128
     406:	0e 94 81 01 	call	0x302	; 0x302 <hd44780_outbyte>

      nl_seen = false;
     40a:	10 92 74 01 	sts	0x0174, r1
    }
  if (c == '\n')
    {
      nl_seen = true;
    }
  else
    {
      hd44780_wait_ready();
     40e:	0e 94 b8 01 	call	0x370	; 0x370 <hd44780_wait_ready>
      hd44780_outdata(c);
     412:	61 e0       	ldi	r22, 0x01	; 1
     414:	81 2f       	mov	r24, r17
     416:	0e 94 81 01 	call	0x302	; 0x302 <hd44780_outbyte>
     41a:	05 c0       	rjmp	.+10     	; 0x426 <lcd_putchar+0x50>
     41c:	1a 30       	cpi	r17, 0x0A	; 10
     41e:	b9 f7       	brne	.-18     	; 0x40e <lcd_putchar+0x38>
     420:	81 e0       	ldi	r24, 0x01	; 1
     422:	80 93 74 01 	sts	0x0174, r24
    }

  return 0;
}
     426:	80 e0       	ldi	r24, 0x00	; 0
     428:	90 e0       	ldi	r25, 0x00	; 0
     42a:	1f 91       	pop	r17
     42c:	08 95       	ret

0000042e <lcd_init>:
     42e:	0e 94 be 01 	call	0x37c	; 0x37c <hd44780_init>
     432:	60 e0       	ldi	r22, 0x00	; 0
     434:	81 e0       	ldi	r24, 0x01	; 1
     436:	0e 94 81 01 	call	0x302	; 0x302 <hd44780_outbyte>
     43a:	0e 94 b8 01 	call	0x370	; 0x370 <hd44780_wait_ready>
     43e:	60 e0       	ldi	r22, 0x00	; 0
     440:	86 e0       	ldi	r24, 0x06	; 6
     442:	0e 94 81 01 	call	0x302	; 0x302 <hd44780_outbyte>
     446:	0e 94 b8 01 	call	0x370	; 0x370 <hd44780_wait_ready>
     44a:	60 e0       	ldi	r22, 0x00	; 0
     44c:	8e e0       	ldi	r24, 0x0E	; 14
     44e:	0e 94 81 01 	call	0x302	; 0x302 <hd44780_outbyte>
     452:	0e 94 b8 01 	call	0x370	; 0x370 <hd44780_wait_ready>
     456:	08 95       	ret

00000458 <uart_init>:
 * Initialize the UART to 9600 Bd, tx/rx, 8N1.
 */
void
uart_init(void)
{
     458:	83 e3       	ldi	r24, 0x33	; 51
     45a:	80 93 c4 00 	sts	0x00C4, r24
#if F_CPU < 2000000UL && defined(U2X)
  UCSR0A = _BV(U2X);             /* improve baud rate error by using 2x clk */
  UBRR0L = (F_CPU / (8UL * UART_BAUD)) - 1;
#else
  UBRR0L = (F_CPU / (16UL * UART_BAUD)) - 1;
#endif
  UCSR0B = _BV(TXEN0) | _BV(RXEN0); /* tx/rx enable */
     45e:	88 e1       	ldi	r24, 0x18	; 24
     460:	80 93 c1 00 	sts	0x00C1, r24
     464:	08 95       	ret

00000466 <uart_putchar>:
}

/*
 * Send character c down the UART Tx, wait until tx holding register
 * is empty.
 */
int
uart_putchar(char c, FILE *stream)
{
     466:	1f 93       	push	r17
     468:	18 2f       	mov	r17, r24

  if (c == '\a')
     46a:	87 30       	cpi	r24, 0x07	; 7
     46c:	49 f0       	breq	.+18     	; 0x480 <uart_putchar+0x1a>
    {
      fputs("*ring*\n", stderr);
      return 0;
    }

  if (c == '\n')
     46e:	8a 30       	cpi	r24, 0x0A	; 10
     470:	a1 f0       	breq	.+40     	; 0x49a <uart_putchar+0x34>
    uart_putchar('\r', stream);
  loop_until_bit_is_set(UCSR0A, UDRE0);
     472:	80 91 c0 00 	lds	r24, 0x00C0
     476:	85 ff       	sbrs	r24, 5
     478:	fc cf       	rjmp	.-8      	; 0x472 <uart_putchar+0xc>
  UDR0 = c;
     47a:	10 93 c6 00 	sts	0x00C6, r17
     47e:	11 c0       	rjmp	.+34     	; 0x4a2 <uart_putchar+0x3c>
     480:	20 91 cb 01 	lds	r18, 0x01CB
     484:	30 91 cc 01 	lds	r19, 0x01CC
     488:	47 e0       	ldi	r20, 0x07	; 7
     48a:	50 e0       	ldi	r21, 0x00	; 0
     48c:	61 e0       	ldi	r22, 0x01	; 1
     48e:	70 e0       	ldi	r23, 0x00	; 0
     490:	8c e6       	ldi	r24, 0x6C	; 108
     492:	91 e0       	ldi	r25, 0x01	; 1
     494:	0e 94 b7 03 	call	0x76e	; 0x76e <fwrite>
     498:	04 c0       	rjmp	.+8      	; 0x4a2 <uart_putchar+0x3c>
     49a:	8d e0       	ldi	r24, 0x0D	; 13
     49c:	0e 94 33 02 	call	0x466	; 0x466 <uart_putchar>
     4a0:	e8 cf       	rjmp	.-48     	; 0x472 <uart_putchar+0xc>

  return 0;
}
     4a2:	80 e0       	ldi	r24, 0x00	; 0
     4a4:	90 e0       	ldi	r25, 0x00	; 0
     4a6:	1f 91       	pop	r17
     4a8:	08 95       	ret

000004aa <uart_getchar>:

/*
 * Receive a character from the UART Rx.
 *
 * This features a simple line-editor that allows to delete and
 * re-edit the characters entered, until either CR or NL is entered.
 * Printable characters entered will be echoed using uart_putchar().
 *
 * Editing characters:
 *
 * . \b (BS) or \177 (DEL) delete the previous character
 * . ^u kills the entire input buffer
 * . ^w deletes the previous word
 * . ^r sends a CR, and then reprints the buffer
 * . \t will be replaced by a single space
 *
 * All other control characters will be ignored.
 *
 * The internal line buffer is RX_BUFSIZE (80) characters long, which
 * includes the terminating \n (but no terminating \0).  If the buffer
 * is full (i. e., at RX_BUFSIZE-1 characters in order to keep space for
 * the trailing \n), any further input attempts will send a \a to
 * uart_putchar() (BEL character), although line editing is still
 * allowed.
 *
 * Input errors while talking to the UART will cause an immediate
 * return of -1 (error indication).  Notably, this will be caused by a
 * framing error (e. g. serial line "break" condition), by an input
 * overrun, and by a parity error (if parity was enabled and automatic
 * parity recognition is supported by hardware).
 *
 * Successive calls to uart_getchar() will be satisfied from the
 * internal buffer until that buffer is emptied again.
 */
int
uart_getchar(FILE *stream)
{
     4aa:	cf 92       	push	r12
     4ac:	df 92       	push	r13
     4ae:	ef 92       	push	r14
     4b0:	ff 92       	push	r15
     4b2:	0f 93       	push	r16
     4b4:	1f 93       	push	r17
     4b6:	cf 93       	push	r28
     4b8:	df 93       	push	r29
     4ba:	ec 01       	movw	r28, r24
  uint8_t c;
  char *cp, *cp2;
  static char b[RX_BUFSIZE];
  static char *rxp;

  if (rxp == 0)
     4bc:	e0 91 75 01 	lds	r30, 0x0175
     4c0:	f0 91 76 01 	lds	r31, 0x0176
     4c4:	30 97       	sbiw	r30, 0x00	; 0
     4c6:	71 f0       	breq	.+28     	; 0x4e4 <uart_getchar+0x3a>
    for (cp = b;;)
      {
	loop_until_bit_is_set(UCSR0A, RXC0);
	if (UCSR0A & _BV(FE0))
	  return _FDEV_EOF;
	if (UCSR0A & _BV(DOR0))
	  return _FDEV_ERR;
	c = UDR0;
	/* behaviour similar to Unix stty ICRNL */
	if (c == '\r')
	  c = '\n';
	if (c == '\n')
	  {
	    *cp = c;
	    uart_putchar(c, stream);
	    rxp = b;
	    break;
	  }
	else if (c == '\t')
	  c = ' ';

	if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') ||
	    c >= (uint8_t)'\xa0')
	  {
	    if (cp == b + RX_BUFSIZE - 1)
	      uart_putchar('\a', stream);
	    else
	      {
		*cp++ = c;
		uart_putchar(c, stream);
	      }
	    continue;
	  }

	switch (c)
	  {
	  case 'c' & 0x1f:
	    return -1;

	  case '\b':
	  case '\x7f':
	    if (cp > b)
	      {
		uart_putchar('\b', stream);
		uart_putchar(' ', stream);
		uart_putchar('\b', stream);
		cp--;
	      }
	    break;

	  case 'r' & 0x1f:
	    uart_putchar('\r', stream);
	    for (cp2 = b; cp2 < cp; cp2++)
	      uart_putchar(*cp2, stream);
	    break;

	  case 'u' & 0x1f:
	    while (cp > b)
	      {
		uart_putchar('\b', stream);
		uart_putchar(' ', stream);
		uart_putchar('\b', stream);
		cp--;
	      }
	    break;

	  case 'w' & 0x1f:
	    while (cp > b && cp[-1] != ' ')
	      {
		uart_putchar('\b', stream);
		uart_putchar(' ', stream);
		uart_putchar('\b', stream);
		cp--;
	      }
	    break;
	  }
      }

  c = *rxp++;
     4c8:	81 91       	ld	r24, Z+
     4ca:	f0 93 76 01 	sts	0x0176, r31
     4ce:	e0 93 75 01 	sts	0x0175, r30
  if (c == '\n')
     4d2:	8a 30       	cpi	r24, 0x0A	; 10
     4d4:	11 f0       	breq	.+4      	; 0x4da <uart_getchar+0x30>
    rxp = 0;

  return c;
     4d6:	99 27       	eor	r25, r25
     4d8:	c3 c0       	rjmp	.+390    	; 0x660 <uart_getchar+0x1b6>
     4da:	10 92 76 01 	sts	0x0176, r1
     4de:	10 92 75 01 	sts	0x0175, r1
     4e2:	f9 cf       	rjmp	.-14     	; 0x4d6 <uart_getchar+0x2c>
     4e4:	07 e7       	ldi	r16, 0x77	; 119
     4e6:	11 e0       	ldi	r17, 0x01	; 1
     4e8:	68 01       	movw	r12, r16
     4ea:	80 91 c0 00 	lds	r24, 0x00C0
     4ee:	87 ff       	sbrs	r24, 7
     4f0:	fc cf       	rjmp	.-8      	; 0x4ea <uart_getchar+0x40>
     4f2:	80 91 c0 00 	lds	r24, 0x00C0
     4f6:	84 fd       	sbrc	r24, 4
     4f8:	35 c0       	rjmp	.+106    	; 0x564 <uart_getchar+0xba>
     4fa:	80 91 c0 00 	lds	r24, 0x00C0
     4fe:	83 fd       	sbrc	r24, 3
     500:	2e c0       	rjmp	.+92     	; 0x55e <uart_getchar+0xb4>
     502:	90 91 c6 00 	lds	r25, 0x00C6
     506:	9d 30       	cpi	r25, 0x0D	; 13
     508:	e9 f0       	breq	.+58     	; 0x544 <uart_getchar+0x9a>
     50a:	9a 30       	cpi	r25, 0x0A	; 10
     50c:	d9 f0       	breq	.+54     	; 0x544 <uart_getchar+0x9a>
     50e:	99 30       	cpi	r25, 0x09	; 9
     510:	91 f0       	breq	.+36     	; 0x536 <uart_getchar+0x8c>
     512:	89 2f       	mov	r24, r25
     514:	80 52       	subi	r24, 0x20	; 32
     516:	8f 35       	cpi	r24, 0x5F	; 95
     518:	10 f0       	brcs	.+4      	; 0x51e <uart_getchar+0x74>
     51a:	90 3a       	cpi	r25, 0xA0	; 160
     51c:	30 f1       	brcs	.+76     	; 0x56a <uart_getchar+0xc0>
     51e:	f1 e0       	ldi	r31, 0x01	; 1
     520:	06 3c       	cpi	r16, 0xC6	; 198
     522:	1f 07       	cpc	r17, r31
     524:	51 f0       	breq	.+20     	; 0x53a <uart_getchar+0x90>
     526:	f8 01       	movw	r30, r16
     528:	91 93       	st	Z+, r25
     52a:	8f 01       	movw	r16, r30
     52c:	be 01       	movw	r22, r28
     52e:	89 2f       	mov	r24, r25
     530:	0e 94 33 02 	call	0x466	; 0x466 <uart_putchar>
     534:	da cf       	rjmp	.-76     	; 0x4ea <uart_getchar+0x40>
     536:	90 e2       	ldi	r25, 0x20	; 32
     538:	f2 cf       	rjmp	.-28     	; 0x51e <uart_getchar+0x74>
     53a:	be 01       	movw	r22, r28
     53c:	87 e0       	ldi	r24, 0x07	; 7
     53e:	0e 94 33 02 	call	0x466	; 0x466 <uart_putchar>
     542:	d3 cf       	rjmp	.-90     	; 0x4ea <uart_getchar+0x40>
     544:	8a e0       	ldi	r24, 0x0A	; 10
     546:	f8 01       	movw	r30, r16
     548:	80 83       	st	Z, r24
     54a:	be 01       	movw	r22, r28
     54c:	0e 94 33 02 	call	0x466	; 0x466 <uart_putchar>
     550:	e7 e7       	ldi	r30, 0x77	; 119
     552:	f1 e0       	ldi	r31, 0x01	; 1
     554:	d0 92 76 01 	sts	0x0176, r13
     558:	c0 92 75 01 	sts	0x0175, r12
     55c:	b5 cf       	rjmp	.-150    	; 0x4c8 <uart_getchar+0x1e>
     55e:	8f ef       	ldi	r24, 0xFF	; 255
     560:	9f ef       	ldi	r25, 0xFF	; 255
     562:	7e c0       	rjmp	.+252    	; 0x660 <uart_getchar+0x1b6>
     564:	8e ef       	ldi	r24, 0xFE	; 254
     566:	9f ef       	ldi	r25, 0xFF	; 255
     568:	7b c0       	rjmp	.+246    	; 0x660 <uart_getchar+0x1b6>
     56a:	92 31       	cpi	r25, 0x12	; 18
     56c:	c1 f1       	breq	.+112    	; 0x5de <uart_getchar+0x134>
     56e:	93 31       	cpi	r25, 0x13	; 19
     570:	d0 f4       	brcc	.+52     	; 0x5a6 <uart_getchar+0xfc>
     572:	93 30       	cpi	r25, 0x03	; 3
     574:	a1 f3       	breq	.-24     	; 0x55e <uart_getchar+0xb4>
     576:	98 30       	cpi	r25, 0x08	; 8
     578:	09 f0       	breq	.+2      	; 0x57c <uart_getchar+0xd2>
     57a:	b7 cf       	rjmp	.-146    	; 0x4ea <uart_getchar+0x40>
     57c:	f1 e0       	ldi	r31, 0x01	; 1
     57e:	07 37       	cpi	r16, 0x77	; 119
     580:	1f 07       	cpc	r17, r31
     582:	09 f0       	breq	.+2      	; 0x586 <uart_getchar+0xdc>
     584:	08 f4       	brcc	.+2      	; 0x588 <uart_getchar+0xde>
     586:	b1 cf       	rjmp	.-158    	; 0x4ea <uart_getchar+0x40>
     588:	be 01       	movw	r22, r28
     58a:	88 e0       	ldi	r24, 0x08	; 8
     58c:	0e 94 33 02 	call	0x466	; 0x466 <uart_putchar>
     590:	be 01       	movw	r22, r28
     592:	80 e2       	ldi	r24, 0x20	; 32
     594:	0e 94 33 02 	call	0x466	; 0x466 <uart_putchar>
     598:	be 01       	movw	r22, r28
     59a:	88 e0       	ldi	r24, 0x08	; 8
     59c:	0e 94 33 02 	call	0x466	; 0x466 <uart_putchar>
     5a0:	01 50       	subi	r16, 0x01	; 1
     5a2:	10 40       	sbci	r17, 0x00	; 0
     5a4:	a2 cf       	rjmp	.-188    	; 0x4ea <uart_getchar+0x40>
     5a6:	97 31       	cpi	r25, 0x17	; 23
     5a8:	91 f1       	breq	.+100    	; 0x60e <uart_getchar+0x164>
     5aa:	9f 37       	cpi	r25, 0x7F	; 127
     5ac:	39 f3       	breq	.-50     	; 0x57c <uart_getchar+0xd2>
     5ae:	95 31       	cpi	r25, 0x15	; 21
     5b0:	09 f0       	breq	.+2      	; 0x5b4 <uart_getchar+0x10a>
     5b2:	9b cf       	rjmp	.-202    	; 0x4ea <uart_getchar+0x40>
     5b4:	0e c0       	rjmp	.+28     	; 0x5d2 <uart_getchar+0x128>
     5b6:	be 01       	movw	r22, r28
     5b8:	88 e0       	ldi	r24, 0x08	; 8
     5ba:	0e 94 33 02 	call	0x466	; 0x466 <uart_putchar>
     5be:	be 01       	movw	r22, r28
     5c0:	80 e2       	ldi	r24, 0x20	; 32
     5c2:	0e 94 33 02 	call	0x466	; 0x466 <uart_putchar>
     5c6:	be 01       	movw	r22, r28
     5c8:	88 e0       	ldi	r24, 0x08	; 8
     5ca:	0e 94 33 02 	call	0x466	; 0x466 <uart_putchar>
     5ce:	01 50       	subi	r16, 0x01	; 1
     5d0:	10 40       	sbci	r17, 0x00	; 0
     5d2:	f1 e0       	ldi	r31, 0x01	; 1
     5d4:	07 37       	cpi	r16, 0x77	; 119
     5d6:	1f 07       	cpc	r17, r31
     5d8:	09 f0       	breq	.+2      	; 0x5dc <uart_getchar+0x132>
     5da:	68 f7       	brcc	.-38     	; 0x5b6 <uart_getchar+0x10c>
     5dc:	86 cf       	rjmp	.-244    	; 0x4ea <uart_getchar+0x40>
     5de:	be 01       	movw	r22, r28
     5e0:	8d e0       	ldi	r24, 0x0D	; 13
     5e2:	0e 94 33 02 	call	0x466	; 0x466 <uart_putchar>
     5e6:	81 e0       	ldi	r24, 0x01	; 1
     5e8:	07 37       	cpi	r16, 0x77	; 119
     5ea:	18 07       	cpc	r17, r24
     5ec:	09 f0       	breq	.+2      	; 0x5f0 <uart_getchar+0x146>
     5ee:	08 f4       	brcc	.+2      	; 0x5f2 <uart_getchar+0x148>
     5f0:	7c cf       	rjmp	.-264    	; 0x4ea <uart_getchar+0x40>
     5f2:	87 e7       	ldi	r24, 0x77	; 119
     5f4:	e8 2e       	mov	r14, r24
     5f6:	81 e0       	ldi	r24, 0x01	; 1
     5f8:	f8 2e       	mov	r15, r24
     5fa:	be 01       	movw	r22, r28
     5fc:	f7 01       	movw	r30, r14
     5fe:	81 91       	ld	r24, Z+
     600:	7f 01       	movw	r14, r30
     602:	0e 94 33 02 	call	0x466	; 0x466 <uart_putchar>
     606:	e0 16       	cp	r14, r16
     608:	f1 06       	cpc	r15, r17
     60a:	b8 f3       	brcs	.-18     	; 0x5fa <uart_getchar+0x150>
     60c:	6e cf       	rjmp	.-292    	; 0x4ea <uart_getchar+0x40>
     60e:	81 e0       	ldi	r24, 0x01	; 1
     610:	07 37       	cpi	r16, 0x77	; 119
     612:	18 07       	cpc	r17, r24
     614:	09 f0       	breq	.+2      	; 0x618 <uart_getchar+0x16e>
     616:	08 f4       	brcc	.+2      	; 0x61a <uart_getchar+0x170>
     618:	68 cf       	rjmp	.-304    	; 0x4ea <uart_getchar+0x40>
     61a:	78 01       	movw	r14, r16
     61c:	08 94       	sec
     61e:	e1 08       	sbc	r14, r1
     620:	f1 08       	sbc	r15, r1
     622:	f7 01       	movw	r30, r14
     624:	80 81       	ld	r24, Z
     626:	80 32       	cpi	r24, 0x20	; 32
     628:	39 f4       	brne	.+14     	; 0x638 <uart_getchar+0x18e>
     62a:	5f cf       	rjmp	.-322    	; 0x4ea <uart_getchar+0x40>
     62c:	f7 01       	movw	r30, r14
     62e:	82 91       	ld	r24, -Z
     630:	7f 01       	movw	r14, r30
     632:	80 32       	cpi	r24, 0x20	; 32
     634:	09 f4       	brne	.+2      	; 0x638 <uart_getchar+0x18e>
     636:	59 cf       	rjmp	.-334    	; 0x4ea <uart_getchar+0x40>
     638:	be 01       	movw	r22, r28
     63a:	88 e0       	ldi	r24, 0x08	; 8
     63c:	0e 94 33 02 	call	0x466	; 0x466 <uart_putchar>
     640:	be 01       	movw	r22, r28
     642:	80 e2       	ldi	r24, 0x20	; 32
     644:	0e 94 33 02 	call	0x466	; 0x466 <uart_putchar>
     648:	be 01       	movw	r22, r28
     64a:	88 e0       	ldi	r24, 0x08	; 8
     64c:	0e 94 33 02 	call	0x466	; 0x466 <uart_putchar>
     650:	87 01       	movw	r16, r14
     652:	87 e7       	ldi	r24, 0x77	; 119
     654:	e8 16       	cp	r14, r24
     656:	81 e0       	ldi	r24, 0x01	; 1
     658:	f8 06       	cpc	r15, r24
     65a:	09 f0       	breq	.+2      	; 0x65e <uart_getchar+0x1b4>
     65c:	38 f7       	brcc	.-50     	; 0x62c <uart_getchar+0x182>
     65e:	45 cf       	rjmp	.-374    	; 0x4ea <uart_getchar+0x40>
     660:	df 91       	pop	r29
     662:	cf 91       	pop	r28
     664:	1f 91       	pop	r17
     666:	0f 91       	pop	r16
     668:	ff 90       	pop	r15
     66a:	ef 90       	pop	r14
     66c:	df 90       	pop	r13
     66e:	cf 90       	pop	r12
     670:	08 95       	ret

00000672 <fgets>:
     672:	cf 92       	push	r12
     674:	df 92       	push	r13
     676:	ef 92       	push	r14
     678:	ff 92       	push	r15
     67a:	0f 93       	push	r16
     67c:	1f 93       	push	r17
     67e:	cf 93       	push	r28
     680:	df 93       	push	r29
     682:	7c 01       	movw	r14, r24
     684:	6a 01       	movw	r12, r20
     686:	fa 01       	movw	r30, r20
     688:	83 81       	ldd	r24, Z+3	; 0x03
     68a:	80 ff       	sbrs	r24, 0
     68c:	19 c0       	rjmp	.+50     	; 0x6c0 <fgets+0x4e>
     68e:	16 16       	cp	r1, r22
     690:	17 06       	cpc	r1, r23
     692:	b4 f4       	brge	.+44     	; 0x6c0 <fgets+0x4e>
     694:	eb 01       	movw	r28, r22
     696:	87 01       	movw	r16, r14
     698:	0d c0       	rjmp	.+26     	; 0x6b4 <fgets+0x42>
     69a:	c6 01       	movw	r24, r12
     69c:	0e 94 2e 0a 	call	0x145c	; 0x145c <fgetc>
     6a0:	ff ef       	ldi	r31, 0xFF	; 255
     6a2:	8f 3f       	cpi	r24, 0xFF	; 255
     6a4:	9f 07       	cpc	r25, r31
     6a6:	61 f0       	breq	.+24     	; 0x6c0 <fgets+0x4e>
     6a8:	f8 01       	movw	r30, r16
     6aa:	81 93       	st	Z+, r24
     6ac:	8f 01       	movw	r16, r30
     6ae:	21 97       	sbiw	r28, 0x01	; 1
     6b0:	0a 97       	sbiw	r24, 0x0a	; 10
     6b2:	19 f0       	breq	.+6      	; 0x6ba <fgets+0x48>
     6b4:	c1 30       	cpi	r28, 0x01	; 1
     6b6:	d1 05       	cpc	r29, r1
     6b8:	81 f7       	brne	.-32     	; 0x69a <fgets+0x28>
     6ba:	f8 01       	movw	r30, r16
     6bc:	10 82       	st	Z, r1
     6be:	02 c0       	rjmp	.+4      	; 0x6c4 <fgets+0x52>
     6c0:	ee 24       	eor	r14, r14
     6c2:	ff 24       	eor	r15, r15
     6c4:	c7 01       	movw	r24, r14
     6c6:	df 91       	pop	r29
     6c8:	cf 91       	pop	r28
     6ca:	1f 91       	pop	r17
     6cc:	0f 91       	pop	r16
     6ce:	ff 90       	pop	r15
     6d0:	ef 90       	pop	r14
     6d2:	df 90       	pop	r13
     6d4:	cf 90       	pop	r12
     6d6:	08 95       	ret

000006d8 <fprintf>:
     6d8:	cf 93       	push	r28
     6da:	df 93       	push	r29
     6dc:	cd b7       	in	r28, 0x3d	; 61
     6de:	de b7       	in	r29, 0x3e	; 62
     6e0:	22 97       	sbiw	r28, 0x02	; 2
     6e2:	0f b6       	in	r0, 0x3f	; 63
     6e4:	f8 94       	cli
     6e6:	de bf       	out	0x3e, r29	; 62
     6e8:	0f be       	out	0x3f, r0	; 63
     6ea:	cd bf       	out	0x3d, r28	; 61
     6ec:	ae 01       	movw	r20, r28
     6ee:	45 5f       	subi	r20, 0xF5	; 245
     6f0:	5f 4f       	sbci	r21, 0xFF	; 255
     6f2:	5a 83       	std	Y+2, r21	; 0x02
     6f4:	49 83       	std	Y+1, r20	; 0x01
     6f6:	69 85       	ldd	r22, Y+9	; 0x09
     6f8:	7a 85       	ldd	r23, Y+10	; 0x0a
     6fa:	8f 81       	ldd	r24, Y+7	; 0x07
     6fc:	98 85       	ldd	r25, Y+8	; 0x08
     6fe:	0e 94 9e 04 	call	0x93c	; 0x93c <vfprintf>
     702:	22 96       	adiw	r28, 0x02	; 2
     704:	0f b6       	in	r0, 0x3f	; 63
     706:	f8 94       	cli
     708:	de bf       	out	0x3e, r29	; 62
     70a:	0f be       	out	0x3f, r0	; 63
     70c:	cd bf       	out	0x3d, r28	; 61
     70e:	df 91       	pop	r29
     710:	cf 91       	pop	r28
     712:	08 95       	ret

00000714 <fputc>:
     714:	0f 93       	push	r16
     716:	1f 93       	push	r17
     718:	cf 93       	push	r28
     71a:	df 93       	push	r29
     71c:	8c 01       	movw	r16, r24
     71e:	eb 01       	movw	r28, r22
     720:	8b 81       	ldd	r24, Y+3	; 0x03
     722:	99 27       	eor	r25, r25
     724:	81 ff       	sbrs	r24, 1
     726:	1b c0       	rjmp	.+54     	; 0x75e <fputc+0x4a>
     728:	82 ff       	sbrs	r24, 2
     72a:	0d c0       	rjmp	.+26     	; 0x746 <fputc+0x32>
     72c:	2e 81       	ldd	r18, Y+6	; 0x06
     72e:	3f 81       	ldd	r19, Y+7	; 0x07
     730:	8c 81       	ldd	r24, Y+4	; 0x04
     732:	9d 81       	ldd	r25, Y+5	; 0x05
     734:	28 17       	cp	r18, r24
     736:	39 07       	cpc	r19, r25
     738:	64 f4       	brge	.+24     	; 0x752 <fputc+0x3e>
     73a:	e8 81       	ld	r30, Y
     73c:	f9 81       	ldd	r31, Y+1	; 0x01
     73e:	01 93       	st	Z+, r16
     740:	f9 83       	std	Y+1, r31	; 0x01
     742:	e8 83       	st	Y, r30
     744:	06 c0       	rjmp	.+12     	; 0x752 <fputc+0x3e>
     746:	e8 85       	ldd	r30, Y+8	; 0x08
     748:	f9 85       	ldd	r31, Y+9	; 0x09
     74a:	80 2f       	mov	r24, r16
     74c:	09 95       	icall
     74e:	89 2b       	or	r24, r25
     750:	31 f4       	brne	.+12     	; 0x75e <fputc+0x4a>
     752:	8e 81       	ldd	r24, Y+6	; 0x06
     754:	9f 81       	ldd	r25, Y+7	; 0x07
     756:	01 96       	adiw	r24, 0x01	; 1
     758:	9f 83       	std	Y+7, r25	; 0x07
     75a:	8e 83       	std	Y+6, r24	; 0x06
     75c:	02 c0       	rjmp	.+4      	; 0x762 <fputc+0x4e>
     75e:	0f ef       	ldi	r16, 0xFF	; 255
     760:	1f ef       	ldi	r17, 0xFF	; 255
     762:	c8 01       	movw	r24, r16
     764:	df 91       	pop	r29
     766:	cf 91       	pop	r28
     768:	1f 91       	pop	r17
     76a:	0f 91       	pop	r16
     76c:	08 95       	ret

0000076e <fwrite>:
     76e:	8f 92       	push	r8
     770:	9f 92       	push	r9
     772:	af 92       	push	r10
     774:	bf 92       	push	r11
     776:	cf 92       	push	r12
     778:	df 92       	push	r13
     77a:	ef 92       	push	r14
     77c:	ff 92       	push	r15
     77e:	0f 93       	push	r16
     780:	1f 93       	push	r17
     782:	cf 93       	push	r28
     784:	df 93       	push	r29
     786:	fc 01       	movw	r30, r24
     788:	4b 01       	movw	r8, r22
     78a:	5a 01       	movw	r10, r20
     78c:	79 01       	movw	r14, r18
     78e:	e9 01       	movw	r28, r18
     790:	8b 81       	ldd	r24, Y+3	; 0x03
     792:	81 ff       	sbrs	r24, 1
     794:	1d c0       	rjmp	.+58     	; 0x7d0 <fwrite+0x62>
     796:	8f 01       	movw	r16, r30
     798:	cc 24       	eor	r12, r12
     79a:	dd 24       	eor	r13, r13
     79c:	13 c0       	rjmp	.+38     	; 0x7c4 <fwrite+0x56>
     79e:	f7 01       	movw	r30, r14
     7a0:	20 85       	ldd	r18, Z+8	; 0x08
     7a2:	31 85       	ldd	r19, Z+9	; 0x09
     7a4:	b7 01       	movw	r22, r14
     7a6:	f8 01       	movw	r30, r16
     7a8:	80 81       	ld	r24, Z
     7aa:	f9 01       	movw	r30, r18
     7ac:	09 95       	icall
     7ae:	89 2b       	or	r24, r25
     7b0:	89 f4       	brne	.+34     	; 0x7d4 <fwrite+0x66>
     7b2:	0f 5f       	subi	r16, 0xFF	; 255
     7b4:	1f 4f       	sbci	r17, 0xFF	; 255
     7b6:	21 96       	adiw	r28, 0x01	; 1
     7b8:	c8 15       	cp	r28, r8
     7ba:	d9 05       	cpc	r29, r9
     7bc:	81 f7       	brne	.-32     	; 0x79e <fwrite+0x30>
     7be:	08 94       	sec
     7c0:	c1 1c       	adc	r12, r1
     7c2:	d1 1c       	adc	r13, r1
     7c4:	ca 14       	cp	r12, r10
     7c6:	db 04       	cpc	r13, r11
     7c8:	29 f0       	breq	.+10     	; 0x7d4 <fwrite+0x66>
     7ca:	c0 e0       	ldi	r28, 0x00	; 0
     7cc:	d0 e0       	ldi	r29, 0x00	; 0
     7ce:	f4 cf       	rjmp	.-24     	; 0x7b8 <fwrite+0x4a>
     7d0:	cc 24       	eor	r12, r12
     7d2:	dd 24       	eor	r13, r13
     7d4:	c6 01       	movw	r24, r12
     7d6:	df 91       	pop	r29
     7d8:	cf 91       	pop	r28
     7da:	1f 91       	pop	r17
     7dc:	0f 91       	pop	r16
     7de:	ff 90       	pop	r15
     7e0:	ef 90       	pop	r14
     7e2:	df 90       	pop	r13
     7e4:	cf 90       	pop	r12
     7e6:	bf 90       	pop	r11
     7e8:	af 90       	pop	r10
     7ea:	9f 90       	pop	r9
     7ec:	8f 90       	pop	r8
     7ee:	08 95       	ret

000007f0 <printf>:
     7f0:	cf 93       	push	r28
     7f2:	df 93       	push	r29
     7f4:	cd b7       	in	r28, 0x3d	; 61
     7f6:	de b7       	in	r29, 0x3e	; 62
     7f8:	22 97       	sbiw	r28, 0x02	; 2
     7fa:	0f b6       	in	r0, 0x3f	; 63
     7fc:	f8 94       	cli
     7fe:	de bf       	out	0x3e, r29	; 62
     800:	0f be       	out	0x3f, r0	; 63
     802:	cd bf       	out	0x3d, r28	; 61
     804:	fe 01       	movw	r30, r28
     806:	37 96       	adiw	r30, 0x07	; 7
     808:	61 91       	ld	r22, Z+
     80a:	71 91       	ld	r23, Z+
     80c:	fa 83       	std	Y+2, r31	; 0x02
     80e:	e9 83       	std	Y+1, r30	; 0x01
     810:	af 01       	movw	r20, r30
     812:	80 91 c9 01 	lds	r24, 0x01C9
     816:	90 91 ca 01 	lds	r25, 0x01CA
     81a:	0e 94 9e 04 	call	0x93c	; 0x93c <vfprintf>
     81e:	22 96       	adiw	r28, 0x02	; 2
     820:	0f b6       	in	r0, 0x3f	; 63
     822:	f8 94       	cli
     824:	de bf       	out	0x3e, r29	; 62
     826:	0f be       	out	0x3f, r0	; 63
     828:	cd bf       	out	0x3d, r28	; 61
     82a:	df 91       	pop	r29
     82c:	cf 91       	pop	r28
     82e:	08 95       	ret

00000830 <printf_P>:
     830:	cf 93       	push	r28
     832:	df 93       	push	r29
     834:	cd b7       	in	r28, 0x3d	; 61
     836:	de b7       	in	r29, 0x3e	; 62
     838:	22 97       	sbiw	r28, 0x02	; 2
     83a:	0f b6       	in	r0, 0x3f	; 63
     83c:	f8 94       	cli
     83e:	de bf       	out	0x3e, r29	; 62
     840:	0f be       	out	0x3f, r0	; 63
     842:	cd bf       	out	0x3d, r28	; 61
     844:	fe 01       	movw	r30, r28
     846:	37 96       	adiw	r30, 0x07	; 7
     848:	61 91       	ld	r22, Z+
     84a:	71 91       	ld	r23, Z+
     84c:	fa 83       	std	Y+2, r31	; 0x02
     84e:	e9 83       	std	Y+1, r30	; 0x01
     850:	e0 91 c9 01 	lds	r30, 0x01C9
     854:	f0 91 ca 01 	lds	r31, 0x01CA
     858:	83 81       	ldd	r24, Z+3	; 0x03
     85a:	88 60       	ori	r24, 0x08	; 8
     85c:	83 83       	std	Z+3, r24	; 0x03
     85e:	49 81       	ldd	r20, Y+1	; 0x01
     860:	5a 81       	ldd	r21, Y+2	; 0x02
     862:	80 91 c9 01 	lds	r24, 0x01C9
     866:	90 91 ca 01 	lds	r25, 0x01CA
     86a:	0e 94 9e 04 	call	0x93c	; 0x93c <vfprintf>
     86e:	e0 91 c9 01 	lds	r30, 0x01C9
     872:	f0 91 ca 01 	lds	r31, 0x01CA
     876:	23 81       	ldd	r18, Z+3	; 0x03
     878:	27 7f       	andi	r18, 0xF7	; 247
     87a:	23 83       	std	Z+3, r18	; 0x03
     87c:	22 96       	adiw	r28, 0x02	; 2
     87e:	0f b6       	in	r0, 0x3f	; 63
     880:	f8 94       	cli
     882:	de bf       	out	0x3e, r29	; 62
     884:	0f be       	out	0x3f, r0	; 63
     886:	cd bf       	out	0x3d, r28	; 61
     888:	df 91       	pop	r29
     88a:	cf 91       	pop	r28
     88c:	08 95       	ret

0000088e <puts>:
     88e:	0f 93       	push	r16
     890:	1f 93       	push	r17
     892:	cf 93       	push	r28
     894:	df 93       	push	r29
     896:	8c 01       	movw	r16, r24
     898:	e0 91 c9 01 	lds	r30, 0x01C9
     89c:	f0 91 ca 01 	lds	r31, 0x01CA
     8a0:	83 81       	ldd	r24, Z+3	; 0x03
     8a2:	81 ff       	sbrs	r24, 1
     8a4:	1f c0       	rjmp	.+62     	; 0x8e4 <puts+0x56>
     8a6:	c0 e0       	ldi	r28, 0x00	; 0
     8a8:	d0 e0       	ldi	r29, 0x00	; 0
     8aa:	0a c0       	rjmp	.+20     	; 0x8c0 <puts+0x32>
     8ac:	fd 01       	movw	r30, r26
     8ae:	20 85       	ldd	r18, Z+8	; 0x08
     8b0:	31 85       	ldd	r19, Z+9	; 0x09
     8b2:	bd 01       	movw	r22, r26
     8b4:	f9 01       	movw	r30, r18
     8b6:	09 95       	icall
     8b8:	89 2b       	or	r24, r25
     8ba:	11 f0       	breq	.+4      	; 0x8c0 <puts+0x32>
     8bc:	cf ef       	ldi	r28, 0xFF	; 255
     8be:	df ef       	ldi	r29, 0xFF	; 255
     8c0:	f8 01       	movw	r30, r16
     8c2:	81 91       	ld	r24, Z+
     8c4:	8f 01       	movw	r16, r30
     8c6:	a0 91 c9 01 	lds	r26, 0x01C9
     8ca:	b0 91 ca 01 	lds	r27, 0x01CA
     8ce:	88 23       	and	r24, r24
     8d0:	69 f7       	brne	.-38     	; 0x8ac <puts+0x1e>
     8d2:	fd 01       	movw	r30, r26
     8d4:	20 85       	ldd	r18, Z+8	; 0x08
     8d6:	31 85       	ldd	r19, Z+9	; 0x09
     8d8:	bd 01       	movw	r22, r26
     8da:	8a e0       	ldi	r24, 0x0A	; 10
     8dc:	f9 01       	movw	r30, r18
     8de:	09 95       	icall
     8e0:	89 2b       	or	r24, r25
     8e2:	11 f0       	breq	.+4      	; 0x8e8 <puts+0x5a>
     8e4:	cf ef       	ldi	r28, 0xFF	; 255
     8e6:	df ef       	ldi	r29, 0xFF	; 255
     8e8:	ce 01       	movw	r24, r28
     8ea:	df 91       	pop	r29
     8ec:	cf 91       	pop	r28
     8ee:	1f 91       	pop	r17
     8f0:	0f 91       	pop	r16
     8f2:	08 95       	ret

000008f4 <sscanf>:
     8f4:	cf 93       	push	r28
     8f6:	df 93       	push	r29
     8f8:	cd b7       	in	r28, 0x3d	; 61
     8fa:	de b7       	in	r29, 0x3e	; 62
     8fc:	60 97       	sbiw	r28, 0x10	; 16
     8fe:	0f b6       	in	r0, 0x3f	; 63
     900:	f8 94       	cli
     902:	de bf       	out	0x3e, r29	; 62
     904:	0f be       	out	0x3f, r0	; 63
     906:	cd bf       	out	0x3d, r28	; 61
     908:	85 e0       	ldi	r24, 0x05	; 5
     90a:	8e 83       	std	Y+6, r24	; 0x06
     90c:	8d 89       	ldd	r24, Y+21	; 0x15
     90e:	9e 89       	ldd	r25, Y+22	; 0x16
     910:	9c 83       	std	Y+4, r25	; 0x04
     912:	8b 83       	std	Y+3, r24	; 0x03
     914:	ae 01       	movw	r20, r28
     916:	47 5e       	subi	r20, 0xE7	; 231
     918:	5f 4f       	sbci	r21, 0xFF	; 255
     91a:	5a 83       	std	Y+2, r21	; 0x02
     91c:	49 83       	std	Y+1, r20	; 0x01
     91e:	6f 89       	ldd	r22, Y+23	; 0x17
     920:	78 8d       	ldd	r23, Y+24	; 0x18
     922:	ce 01       	movw	r24, r28
     924:	03 96       	adiw	r24, 0x03	; 3
     926:	0e 94 69 07 	call	0xed2	; 0xed2 <vfscanf>
     92a:	60 96       	adiw	r28, 0x10	; 16
     92c:	0f b6       	in	r0, 0x3f	; 63
     92e:	f8 94       	cli
     930:	de bf       	out	0x3e, r29	; 62
     932:	0f be       	out	0x3f, r0	; 63
     934:	cd bf       	out	0x3d, r28	; 61
     936:	df 91       	pop	r29
     938:	cf 91       	pop	r28
     93a:	08 95       	ret

0000093c <vfprintf>:
     93c:	2f 92       	push	r2
     93e:	3f 92       	push	r3
     940:	4f 92       	push	r4
     942:	5f 92       	push	r5
     944:	6f 92       	push	r6
     946:	7f 92       	push	r7
     948:	8f 92       	push	r8
     94a:	9f 92       	push	r9
     94c:	af 92       	push	r10
     94e:	bf 92       	push	r11
     950:	cf 92       	push	r12
     952:	df 92       	push	r13
     954:	ef 92       	push	r14
     956:	ff 92       	push	r15
     958:	0f 93       	push	r16
     95a:	1f 93       	push	r17
     95c:	cf 93       	push	r28
     95e:	df 93       	push	r29
     960:	cd b7       	in	r28, 0x3d	; 61
     962:	de b7       	in	r29, 0x3e	; 62
     964:	64 97       	sbiw	r28, 0x14	; 20
     966:	0f b6       	in	r0, 0x3f	; 63
     968:	f8 94       	cli
     96a:	de bf       	out	0x3e, r29	; 62
     96c:	0f be       	out	0x3f, r0	; 63
     96e:	cd bf       	out	0x3d, r28	; 61
     970:	cc 24       	eor	r12, r12
     972:	dd 24       	eor	r13, r13
     974:	76 01       	movw	r14, r12
     976:	1c 01       	movw	r2, r24
     978:	7c 8b       	std	Y+20, r23	; 0x14
     97a:	6b 8b       	std	Y+19, r22	; 0x13
     97c:	2a 01       	movw	r4, r20
     97e:	fc 01       	movw	r30, r24
     980:	17 82       	std	Z+7, r1	; 0x07
     982:	16 82       	std	Z+6, r1	; 0x06
     984:	83 81       	ldd	r24, Z+3	; 0x03
     986:	81 fd       	sbrc	r24, 1
     988:	03 c0       	rjmp	.+6      	; 0x990 <vfprintf+0x54>
     98a:	8f ef       	ldi	r24, 0xFF	; 255
     98c:	9f ef       	ldi	r25, 0xFF	; 255
     98e:	88 c2       	rjmp	.+1296   	; 0xea0 <vfprintf+0x564>
     990:	aa 24       	eor	r10, r10
     992:	bb 24       	eor	r11, r11
     994:	72 c2       	rjmp	.+1252   	; 0xe7a <vfprintf+0x53e>
     996:	a0 fe       	sbrs	r10, 0
     998:	57 c2       	rjmp	.+1198   	; 0xe48 <vfprintf+0x50c>
     99a:	8a 89       	ldd	r24, Y+18	; 0x12
     99c:	80 53       	subi	r24, 0x30	; 48
     99e:	8a 30       	cpi	r24, 0x0A	; 10
     9a0:	e8 f4       	brcc	.+58     	; 0x9dc <vfprintf+0xa0>
     9a2:	fa 89       	ldd	r31, Y+18	; 0x12
     9a4:	f0 33       	cpi	r31, 0x30	; 48
     9a6:	41 f4       	brne	.+16     	; 0x9b8 <vfprintf+0x7c>
     9a8:	2d 85       	ldd	r18, Y+13	; 0x0d
     9aa:	22 23       	and	r18, r18
     9ac:	29 f4       	brne	.+10     	; 0x9b8 <vfprintf+0x7c>
     9ae:	a3 fc       	sbrc	r10, 3
     9b0:	03 c0       	rjmp	.+6      	; 0x9b8 <vfprintf+0x7c>
     9b2:	80 e0       	ldi	r24, 0x00	; 0
     9b4:	91 e0       	ldi	r25, 0x01	; 1
     9b6:	6f c0       	rjmp	.+222    	; 0xa96 <vfprintf+0x15a>
     9b8:	8a e0       	ldi	r24, 0x0A	; 10
     9ba:	ed 85       	ldd	r30, Y+13	; 0x0d
     9bc:	e8 02       	muls	r30, r24
     9be:	c0 01       	movw	r24, r0
     9c0:	11 24       	eor	r1, r1
     9c2:	fa 89       	ldd	r31, Y+18	; 0x12
     9c4:	f8 0f       	add	r31, r24
     9c6:	f0 53       	subi	r31, 0x30	; 48
     9c8:	fd 87       	std	Y+13, r31	; 0x0d
     9ca:	f7 ff       	sbrs	r31, 7
     9cc:	02 c0       	rjmp	.+4      	; 0x9d2 <vfprintf+0x96>
     9ce:	2f e7       	ldi	r18, 0x7F	; 127
     9d0:	2d 87       	std	Y+13, r18	; 0x0d
     9d2:	a3 fc       	sbrc	r10, 3
     9d4:	4c c2       	rjmp	.+1176   	; 0xe6e <vfprintf+0x532>
     9d6:	3d 85       	ldd	r19, Y+13	; 0x0d
     9d8:	3e 87       	std	Y+14, r19	; 0x0e
     9da:	49 c2       	rjmp	.+1170   	; 0xe6e <vfprintf+0x532>
     9dc:	c5 01       	movw	r24, r10
     9de:	88 70       	andi	r24, 0x08	; 8
     9e0:	90 70       	andi	r25, 0x00	; 0
     9e2:	a3 fe       	sbrs	r10, 3
     9e4:	05 c0       	rjmp	.+10     	; 0x9f0 <vfprintf+0xb4>
     9e6:	ed 85       	ldd	r30, Y+13	; 0x0d
     9e8:	ee 23       	and	r30, r30
     9ea:	11 f4       	brne	.+4      	; 0x9f0 <vfprintf+0xb4>
     9ec:	f1 e0       	ldi	r31, 0x01	; 1
     9ee:	fd 87       	std	Y+13, r31	; 0x0d
     9f0:	2a 89       	ldd	r18, Y+18	; 0x12
     9f2:	28 36       	cpi	r18, 0x68	; 104
     9f4:	24 f5       	brge	.+72     	; 0xa3e <vfprintf+0x102>
     9f6:	25 36       	cpi	r18, 0x65	; 101
     9f8:	0c f0       	brlt	.+2      	; 0x9fc <vfprintf+0xc0>
     9fa:	5b c0       	rjmp	.+182    	; 0xab2 <vfprintf+0x176>
     9fc:	23 35       	cpi	r18, 0x53	; 83
     9fe:	09 f4       	brne	.+2      	; 0xa02 <vfprintf+0xc6>
     a00:	80 c0       	rjmp	.+256    	; 0xb02 <vfprintf+0x1c6>
     a02:	24 35       	cpi	r18, 0x54	; 84
     a04:	8c f4       	brge	.+34     	; 0xa28 <vfprintf+0xec>
     a06:	2b 32       	cpi	r18, 0x2B	; 43
     a08:	c1 f1       	breq	.+112    	; 0xa7a <vfprintf+0x13e>
     a0a:	2c 32       	cpi	r18, 0x2C	; 44
     a0c:	34 f4       	brge	.+12     	; 0xa1a <vfprintf+0xde>
     a0e:	20 32       	cpi	r18, 0x20	; 32
     a10:	c1 f1       	breq	.+112    	; 0xa82 <vfprintf+0x146>
     a12:	23 32       	cpi	r18, 0x23	; 35
     a14:	09 f0       	breq	.+2      	; 0xa18 <vfprintf+0xdc>
     a16:	0d c2       	rjmp	.+1050   	; 0xe32 <vfprintf+0x4f6>
     a18:	3c c0       	rjmp	.+120    	; 0xa92 <vfprintf+0x156>
     a1a:	3a 89       	ldd	r19, Y+18	; 0x12
     a1c:	3d 32       	cpi	r19, 0x2D	; 45
     a1e:	b1 f1       	breq	.+108    	; 0xa8c <vfprintf+0x150>
     a20:	3e 32       	cpi	r19, 0x2E	; 46
     a22:	09 f0       	breq	.+2      	; 0xa26 <vfprintf+0xea>
     a24:	06 c2       	rjmp	.+1036   	; 0xe32 <vfprintf+0x4f6>
     a26:	3a c0       	rjmp	.+116    	; 0xa9c <vfprintf+0x160>
     a28:	8a 89       	ldd	r24, Y+18	; 0x12
     a2a:	83 36       	cpi	r24, 0x63	; 99
     a2c:	09 f4       	brne	.+2      	; 0xa30 <vfprintf+0xf4>
     a2e:	49 c0       	rjmp	.+146    	; 0xac2 <vfprintf+0x186>
     a30:	84 36       	cpi	r24, 0x64	; 100
     a32:	0c f0       	brlt	.+2      	; 0xa36 <vfprintf+0xfa>
     a34:	81 c0       	rjmp	.+258    	; 0xb38 <vfprintf+0x1fc>
     a36:	88 35       	cpi	r24, 0x58	; 88
     a38:	09 f0       	breq	.+2      	; 0xa3c <vfprintf+0x100>
     a3a:	fb c1       	rjmp	.+1014   	; 0xe32 <vfprintf+0x4f6>
     a3c:	1b c0       	rjmp	.+54     	; 0xa74 <vfprintf+0x138>
     a3e:	ea 89       	ldd	r30, Y+18	; 0x12
     a40:	e0 37       	cpi	r30, 0x70	; 112
     a42:	09 f4       	brne	.+2      	; 0xa46 <vfprintf+0x10a>
     a44:	a3 c0       	rjmp	.+326    	; 0xb8c <vfprintf+0x250>
     a46:	e1 37       	cpi	r30, 0x71	; 113
     a48:	44 f4       	brge	.+16     	; 0xa5a <vfprintf+0x11e>
     a4a:	ec 36       	cpi	r30, 0x6C	; 108
     a4c:	69 f1       	breq	.+90     	; 0xaa8 <vfprintf+0x16c>
     a4e:	ef 36       	cpi	r30, 0x6F	; 111
     a50:	71 f0       	breq	.+28     	; 0xa6e <vfprintf+0x132>
     a52:	e9 36       	cpi	r30, 0x69	; 105
     a54:	09 f0       	breq	.+2      	; 0xa58 <vfprintf+0x11c>
     a56:	ed c1       	rjmp	.+986    	; 0xe32 <vfprintf+0x4f6>
     a58:	6f c0       	rjmp	.+222    	; 0xb38 <vfprintf+0x1fc>
     a5a:	fa 89       	ldd	r31, Y+18	; 0x12
     a5c:	f5 37       	cpi	r31, 0x75	; 117
     a5e:	09 f4       	brne	.+2      	; 0xa62 <vfprintf+0x126>
     a60:	9d c0       	rjmp	.+314    	; 0xb9c <vfprintf+0x260>
     a62:	f8 37       	cpi	r31, 0x78	; 120
     a64:	39 f0       	breq	.+14     	; 0xa74 <vfprintf+0x138>
     a66:	f3 37       	cpi	r31, 0x73	; 115
     a68:	09 f0       	breq	.+2      	; 0xa6c <vfprintf+0x130>
     a6a:	e3 c1       	rjmp	.+966    	; 0xe32 <vfprintf+0x4f6>
     a6c:	34 c0       	rjmp	.+104    	; 0xad6 <vfprintf+0x19a>
     a6e:	28 e0       	ldi	r18, 0x08	; 8
     a70:	29 8b       	std	Y+17, r18	; 0x11
     a72:	94 c0       	rjmp	.+296    	; 0xb9c <vfprintf+0x260>
     a74:	30 e1       	ldi	r19, 0x10	; 16
     a76:	39 8b       	std	Y+17, r19	; 0x11
     a78:	91 c0       	rjmp	.+290    	; 0xb9c <vfprintf+0x260>
     a7a:	80 e1       	ldi	r24, 0x10	; 16
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	a8 2a       	or	r10, r24
     a80:	b9 2a       	or	r11, r25
     a82:	e0 e2       	ldi	r30, 0x20	; 32
     a84:	f0 e0       	ldi	r31, 0x00	; 0
     a86:	ae 2a       	or	r10, r30
     a88:	bf 2a       	or	r11, r31
     a8a:	f1 c1       	rjmp	.+994    	; 0xe6e <vfprintf+0x532>
     a8c:	20 e8       	ldi	r18, 0x80	; 128
     a8e:	30 e0       	ldi	r19, 0x00	; 0
     a90:	0d c0       	rjmp	.+26     	; 0xaac <vfprintf+0x170>
     a92:	80 e4       	ldi	r24, 0x40	; 64
     a94:	90 e0       	ldi	r25, 0x00	; 0
     a96:	a8 2a       	or	r10, r24
     a98:	b9 2a       	or	r11, r25
     a9a:	e9 c1       	rjmp	.+978    	; 0xe6e <vfprintf+0x532>
     a9c:	e8 e0       	ldi	r30, 0x08	; 8
     a9e:	f0 e0       	ldi	r31, 0x00	; 0
     aa0:	ae 2a       	or	r10, r30
     aa2:	bf 2a       	or	r11, r31
     aa4:	1d 86       	std	Y+13, r1	; 0x0d
     aa6:	e3 c1       	rjmp	.+966    	; 0xe6e <vfprintf+0x532>
     aa8:	24 e0       	ldi	r18, 0x04	; 4
     aaa:	30 e0       	ldi	r19, 0x00	; 0
     aac:	a2 2a       	or	r10, r18
     aae:	b3 2a       	or	r11, r19
     ab0:	de c1       	rjmp	.+956    	; 0xe6e <vfprintf+0x532>
     ab2:	4f e3       	ldi	r20, 0x3F	; 63
     ab4:	c4 2e       	mov	r12, r20
     ab6:	3e 85       	ldd	r19, Y+14	; 0x0e
     ab8:	31 50       	subi	r19, 0x01	; 1
     aba:	3e 87       	std	Y+14, r19	; 0x0e
     abc:	83 e6       	ldi	r24, 0x63	; 99
     abe:	8a 8b       	std	Y+18, r24	; 0x12
     ac0:	44 c1       	rjmp	.+648    	; 0xd4a <vfprintf+0x40e>
     ac2:	f2 01       	movw	r30, r4
     ac4:	c0 80       	ld	r12, Z
     ac6:	fe 85       	ldd	r31, Y+14	; 0x0e
     ac8:	f1 50       	subi	r31, 0x01	; 1
     aca:	fe 87       	std	Y+14, r31	; 0x0e
     acc:	22 e0       	ldi	r18, 0x02	; 2
     ace:	30 e0       	ldi	r19, 0x00	; 0
     ad0:	42 0e       	add	r4, r18
     ad2:	53 1e       	adc	r5, r19
     ad4:	3a c1       	rjmp	.+628    	; 0xd4a <vfprintf+0x40e>
     ad6:	f2 01       	movw	r30, r4
     ad8:	c0 80       	ld	r12, Z
     ada:	d1 80       	ldd	r13, Z+1	; 0x01
     adc:	89 2b       	or	r24, r25
     ade:	49 f0       	breq	.+18     	; 0xaf2 <vfprintf+0x1b6>
     ae0:	fd 85       	ldd	r31, Y+13	; 0x0d
     ae2:	6f 2f       	mov	r22, r31
     ae4:	77 27       	eor	r23, r23
     ae6:	67 fd       	sbrc	r22, 7
     ae8:	70 95       	com	r23
     aea:	c6 01       	movw	r24, r12
     aec:	0e 94 23 0a 	call	0x1446	; 0x1446 <strnlen>
     af0:	19 c0       	rjmp	.+50     	; 0xb24 <vfprintf+0x1e8>
     af2:	f6 01       	movw	r30, r12
     af4:	01 90       	ld	r0, Z+
     af6:	00 20       	and	r0, r0
     af8:	e9 f7       	brne	.-6      	; 0xaf4 <vfprintf+0x1b8>
     afa:	31 97       	sbiw	r30, 0x01	; 1
     afc:	ec 19       	sub	r30, r12
     afe:	e9 8b       	std	Y+17, r30	; 0x11
     b00:	12 c0       	rjmp	.+36     	; 0xb26 <vfprintf+0x1ea>
     b02:	f2 01       	movw	r30, r4
     b04:	c0 80       	ld	r12, Z
     b06:	d1 80       	ldd	r13, Z+1	; 0x01
     b08:	89 2b       	or	r24, r25
     b0a:	49 f0       	breq	.+18     	; 0xb1e <vfprintf+0x1e2>
     b0c:	fd 85       	ldd	r31, Y+13	; 0x0d
     b0e:	6f 2f       	mov	r22, r31
     b10:	77 27       	eor	r23, r23
     b12:	67 fd       	sbrc	r22, 7
     b14:	70 95       	com	r23
     b16:	c6 01       	movw	r24, r12
     b18:	0e 94 18 0a 	call	0x1430	; 0x1430 <strnlen_P>
     b1c:	03 c0       	rjmp	.+6      	; 0xb24 <vfprintf+0x1e8>
     b1e:	c6 01       	movw	r24, r12
     b20:	0e 94 0f 0a 	call	0x141e	; 0x141e <strlen_P>
     b24:	89 8b       	std	Y+17, r24	; 0x11
     b26:	22 e0       	ldi	r18, 0x02	; 2
     b28:	30 e0       	ldi	r19, 0x00	; 0
     b2a:	42 0e       	add	r4, r18
     b2c:	53 1e       	adc	r5, r19
     b2e:	3e 85       	ldd	r19, Y+14	; 0x0e
     b30:	89 89       	ldd	r24, Y+17	; 0x11
     b32:	38 1b       	sub	r19, r24
     b34:	3e 87       	std	Y+14, r19	; 0x0e
     b36:	09 c1       	rjmp	.+530    	; 0xd4a <vfprintf+0x40e>
     b38:	a2 fe       	sbrs	r10, 2
     b3a:	08 c0       	rjmp	.+16     	; 0xb4c <vfprintf+0x210>
     b3c:	f2 01       	movw	r30, r4
     b3e:	80 81       	ld	r24, Z
     b40:	91 81       	ldd	r25, Z+1	; 0x01
     b42:	a2 81       	ldd	r26, Z+2	; 0x02
     b44:	b3 81       	ldd	r27, Z+3	; 0x03
     b46:	24 e0       	ldi	r18, 0x04	; 4
     b48:	30 e0       	ldi	r19, 0x00	; 0
     b4a:	09 c0       	rjmp	.+18     	; 0xb5e <vfprintf+0x222>
     b4c:	f2 01       	movw	r30, r4
     b4e:	80 81       	ld	r24, Z
     b50:	91 81       	ldd	r25, Z+1	; 0x01
     b52:	aa 27       	eor	r26, r26
     b54:	97 fd       	sbrc	r25, 7
     b56:	a0 95       	com	r26
     b58:	ba 2f       	mov	r27, r26
     b5a:	22 e0       	ldi	r18, 0x02	; 2
     b5c:	30 e0       	ldi	r19, 0x00	; 0
     b5e:	42 0e       	add	r4, r18
     b60:	53 1e       	adc	r5, r19
     b62:	6c 01       	movw	r12, r24
     b64:	7d 01       	movw	r14, r26
     b66:	b7 ff       	sbrs	r27, 7
     b68:	0c c0       	rjmp	.+24     	; 0xb82 <vfprintf+0x246>
     b6a:	82 e0       	ldi	r24, 0x02	; 2
     b6c:	90 e0       	ldi	r25, 0x00	; 0
     b6e:	a8 2a       	or	r10, r24
     b70:	b9 2a       	or	r11, r25
     b72:	f0 94       	com	r15
     b74:	e0 94       	com	r14
     b76:	d0 94       	com	r13
     b78:	c0 94       	com	r12
     b7a:	c1 1c       	adc	r12, r1
     b7c:	d1 1c       	adc	r13, r1
     b7e:	e1 1c       	adc	r14, r1
     b80:	f1 1c       	adc	r15, r1
     b82:	ef eb       	ldi	r30, 0xBF	; 191
     b84:	ff ef       	ldi	r31, 0xFF	; 255
     b86:	ae 22       	and	r10, r30
     b88:	bf 22       	and	r11, r31
     b8a:	21 c0       	rjmp	.+66     	; 0xbce <vfprintf+0x292>
     b8c:	20 e4       	ldi	r18, 0x40	; 64
     b8e:	30 e0       	ldi	r19, 0x00	; 0
     b90:	a2 2a       	or	r10, r18
     b92:	b3 2a       	or	r11, r19
     b94:	38 e7       	ldi	r19, 0x78	; 120
     b96:	3a 8b       	std	Y+18, r19	; 0x12
     b98:	80 e1       	ldi	r24, 0x10	; 16
     b9a:	89 8b       	std	Y+17, r24	; 0x11
     b9c:	a2 fe       	sbrs	r10, 2
     b9e:	08 c0       	rjmp	.+16     	; 0xbb0 <vfprintf+0x274>
     ba0:	f2 01       	movw	r30, r4
     ba2:	80 81       	ld	r24, Z
     ba4:	91 81       	ldd	r25, Z+1	; 0x01
     ba6:	a2 81       	ldd	r26, Z+2	; 0x02
     ba8:	b3 81       	ldd	r27, Z+3	; 0x03
     baa:	24 e0       	ldi	r18, 0x04	; 4
     bac:	30 e0       	ldi	r19, 0x00	; 0
     bae:	07 c0       	rjmp	.+14     	; 0xbbe <vfprintf+0x282>
     bb0:	f2 01       	movw	r30, r4
     bb2:	80 81       	ld	r24, Z
     bb4:	91 81       	ldd	r25, Z+1	; 0x01
     bb6:	aa 27       	eor	r26, r26
     bb8:	bb 27       	eor	r27, r27
     bba:	22 e0       	ldi	r18, 0x02	; 2
     bbc:	30 e0       	ldi	r19, 0x00	; 0
     bbe:	42 0e       	add	r4, r18
     bc0:	53 1e       	adc	r5, r19
     bc2:	6c 01       	movw	r12, r24
     bc4:	7d 01       	movw	r14, r26
     bc6:	8f ec       	ldi	r24, 0xCF	; 207
     bc8:	9f ef       	ldi	r25, 0xFF	; 255
     bca:	a8 22       	and	r10, r24
     bcc:	b9 22       	and	r11, r25
     bce:	87 01       	movw	r16, r14
     bd0:	76 01       	movw	r14, r12
     bd2:	fe 01       	movw	r30, r28
     bd4:	31 96       	adiw	r30, 0x01	; 1
     bd6:	f8 8b       	std	Y+16, r31	; 0x10
     bd8:	ef 87       	std	Y+15, r30	; 0x0f
     bda:	f9 89       	ldd	r31, Y+17	; 0x11
     bdc:	6f 2e       	mov	r6, r31
     bde:	77 24       	eor	r7, r7
     be0:	88 24       	eor	r8, r8
     be2:	99 24       	eor	r9, r9
     be4:	c8 01       	movw	r24, r16
     be6:	b7 01       	movw	r22, r14
     be8:	a4 01       	movw	r20, r8
     bea:	93 01       	movw	r18, r6
     bec:	0e 94 ce 0a 	call	0x159c	; 0x159c <__udivmodsi4>
     bf0:	6a 30       	cpi	r22, 0x0A	; 10
     bf2:	24 f0       	brlt	.+8      	; 0xbfc <vfprintf+0x2c0>
     bf4:	2a 89       	ldd	r18, Y+18	; 0x12
     bf6:	62 0f       	add	r22, r18
     bf8:	61 52       	subi	r22, 0x21	; 33
     bfa:	01 c0       	rjmp	.+2      	; 0xbfe <vfprintf+0x2c2>
     bfc:	60 5d       	subi	r22, 0xD0	; 208
     bfe:	ef 85       	ldd	r30, Y+15	; 0x0f
     c00:	f8 89       	ldd	r31, Y+16	; 0x10
     c02:	61 93       	st	Z+, r22
     c04:	f8 8b       	std	Y+16, r31	; 0x10
     c06:	ef 87       	std	Y+15, r30	; 0x0f
     c08:	c8 01       	movw	r24, r16
     c0a:	b7 01       	movw	r22, r14
     c0c:	a4 01       	movw	r20, r8
     c0e:	93 01       	movw	r18, r6
     c10:	0e 94 ce 0a 	call	0x159c	; 0x159c <__udivmodsi4>
     c14:	79 01       	movw	r14, r18
     c16:	8a 01       	movw	r16, r20
     c18:	21 15       	cp	r18, r1
     c1a:	31 05       	cpc	r19, r1
     c1c:	41 05       	cpc	r20, r1
     c1e:	51 05       	cpc	r21, r1
     c20:	09 f7       	brne	.-62     	; 0xbe4 <vfprintf+0x2a8>
     c22:	cc 24       	eor	r12, r12
     c24:	dd 24       	eor	r13, r13
     c26:	76 01       	movw	r14, r12
     c28:	ce 01       	movw	r24, r28
     c2a:	01 96       	adiw	r24, 0x01	; 1
     c2c:	cf 84       	ldd	r12, Y+15	; 0x0f
     c2e:	c8 1a       	sub	r12, r24
     c30:	c5 01       	movw	r24, r10
     c32:	82 73       	andi	r24, 0x32	; 50
     c34:	90 70       	andi	r25, 0x00	; 0
     c36:	89 2b       	or	r24, r25
     c38:	19 f0       	breq	.+6      	; 0xc40 <vfprintf+0x304>
     c3a:	fe 85       	ldd	r31, Y+14	; 0x0e
     c3c:	f1 50       	subi	r31, 0x01	; 1
     c3e:	fe 87       	std	Y+14, r31	; 0x0e
     c40:	a6 fe       	sbrs	r10, 6
     c42:	09 c0       	rjmp	.+18     	; 0xc56 <vfprintf+0x31a>
     c44:	29 89       	ldd	r18, Y+17	; 0x11
     c46:	20 31       	cpi	r18, 0x10	; 16
     c48:	11 f4       	brne	.+4      	; 0xc4e <vfprintf+0x312>
     c4a:	82 e0       	ldi	r24, 0x02	; 2
     c4c:	01 c0       	rjmp	.+2      	; 0xc50 <vfprintf+0x314>
     c4e:	81 e0       	ldi	r24, 0x01	; 1
     c50:	3e 85       	ldd	r19, Y+14	; 0x0e
     c52:	38 1b       	sub	r19, r24
     c54:	3e 87       	std	Y+14, r19	; 0x0e
     c56:	38 e0       	ldi	r19, 0x08	; 8
     c58:	83 2e       	mov	r8, r19
     c5a:	91 2c       	mov	r9, r1
     c5c:	8a 20       	and	r8, r10
     c5e:	9b 20       	and	r9, r11
     c60:	a3 fe       	sbrs	r10, 3
     c62:	1b c0       	rjmp	.+54     	; 0xc9a <vfprintf+0x35e>
     c64:	8d 85       	ldd	r24, Y+13	; 0x0d
     c66:	28 2f       	mov	r18, r24
     c68:	33 27       	eor	r19, r19
     c6a:	27 fd       	sbrc	r18, 7
     c6c:	30 95       	com	r19
     c6e:	8c 2d       	mov	r24, r12
     c70:	99 27       	eor	r25, r25
     c72:	82 17       	cp	r24, r18
     c74:	93 07       	cpc	r25, r19
     c76:	54 f0       	brlt	.+20     	; 0xc8c <vfprintf+0x350>
     c78:	e7 ef       	ldi	r30, 0xF7	; 247
     c7a:	ff ef       	ldi	r31, 0xFF	; 255
     c7c:	ae 22       	and	r10, r30
     c7e:	bf 22       	and	r11, r31
     c80:	28 e0       	ldi	r18, 0x08	; 8
     c82:	82 2e       	mov	r8, r18
     c84:	91 2c       	mov	r9, r1
     c86:	8a 20       	and	r8, r10
     c88:	9b 20       	and	r9, r11
     c8a:	07 c0       	rjmp	.+14     	; 0xc9a <vfprintf+0x35e>
     c8c:	fd 85       	ldd	r31, Y+13	; 0x0d
     c8e:	fc 19       	sub	r31, r12
     c90:	fd 87       	std	Y+13, r31	; 0x0d
     c92:	2e 85       	ldd	r18, Y+14	; 0x0e
     c94:	2f 1b       	sub	r18, r31
     c96:	2e 87       	std	Y+14, r18	; 0x0e
     c98:	03 c0       	rjmp	.+6      	; 0xca0 <vfprintf+0x364>
     c9a:	3e 85       	ldd	r19, Y+14	; 0x0e
     c9c:	3c 19       	sub	r19, r12
     c9e:	3e 87       	std	Y+14, r19	; 0x0e
     ca0:	c5 01       	movw	r24, r10
     ca2:	80 78       	andi	r24, 0x80	; 128
     ca4:	91 70       	andi	r25, 0x01	; 1
     ca6:	89 2b       	or	r24, r25
     ca8:	69 f4       	brne	.+26     	; 0xcc4 <vfprintf+0x388>
     caa:	8e 85       	ldd	r24, Y+14	; 0x0e
     cac:	06 c0       	rjmp	.+12     	; 0xcba <vfprintf+0x37e>
     cae:	b1 01       	movw	r22, r2
     cb0:	80 e2       	ldi	r24, 0x20	; 32
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
     cb8:	81 2f       	mov	r24, r17
     cba:	18 2f       	mov	r17, r24
     cbc:	11 50       	subi	r17, 0x01	; 1
     cbe:	18 16       	cp	r1, r24
     cc0:	b4 f3       	brlt	.-20     	; 0xcae <vfprintf+0x372>
     cc2:	1e 87       	std	Y+14, r17	; 0x0e
     cc4:	a1 fe       	sbrs	r10, 1
     cc6:	04 c0       	rjmp	.+8      	; 0xcd0 <vfprintf+0x394>
     cc8:	b1 01       	movw	r22, r2
     cca:	8d e2       	ldi	r24, 0x2D	; 45
     ccc:	90 e0       	ldi	r25, 0x00	; 0
     cce:	0b c0       	rjmp	.+22     	; 0xce6 <vfprintf+0x3aa>
     cd0:	a4 fe       	sbrs	r10, 4
     cd2:	04 c0       	rjmp	.+8      	; 0xcdc <vfprintf+0x3a0>
     cd4:	b1 01       	movw	r22, r2
     cd6:	8b e2       	ldi	r24, 0x2B	; 43
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	05 c0       	rjmp	.+10     	; 0xce6 <vfprintf+0x3aa>
     cdc:	a5 fe       	sbrs	r10, 5
     cde:	05 c0       	rjmp	.+10     	; 0xcea <vfprintf+0x3ae>
     ce0:	b1 01       	movw	r22, r2
     ce2:	80 e2       	ldi	r24, 0x20	; 32
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
     cea:	a6 fe       	sbrs	r10, 6
     cec:	10 c0       	rjmp	.+32     	; 0xd0e <vfprintf+0x3d2>
     cee:	b1 01       	movw	r22, r2
     cf0:	80 e3       	ldi	r24, 0x30	; 48
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
     cf8:	89 89       	ldd	r24, Y+17	; 0x11
     cfa:	80 31       	cpi	r24, 0x10	; 16
     cfc:	41 f4       	brne	.+16     	; 0xd0e <vfprintf+0x3d2>
     cfe:	b1 01       	movw	r22, r2
     d00:	ea 89       	ldd	r30, Y+18	; 0x12
     d02:	8e 2f       	mov	r24, r30
     d04:	99 27       	eor	r25, r25
     d06:	87 fd       	sbrc	r24, 7
     d08:	90 95       	com	r25
     d0a:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
     d0e:	b0 fe       	sbrs	r11, 0
     d10:	0d c0       	rjmp	.+26     	; 0xd2c <vfprintf+0x3f0>
     d12:	8e 85       	ldd	r24, Y+14	; 0x0e
     d14:	06 c0       	rjmp	.+12     	; 0xd22 <vfprintf+0x3e6>
     d16:	b1 01       	movw	r22, r2
     d18:	80 e3       	ldi	r24, 0x30	; 48
     d1a:	90 e0       	ldi	r25, 0x00	; 0
     d1c:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
     d20:	81 2f       	mov	r24, r17
     d22:	18 2f       	mov	r17, r24
     d24:	11 50       	subi	r17, 0x01	; 1
     d26:	18 16       	cp	r1, r24
     d28:	b4 f3       	brlt	.-20     	; 0xd16 <vfprintf+0x3da>
     d2a:	1e 87       	std	Y+14, r17	; 0x0e
     d2c:	89 28       	or	r8, r9
     d2e:	69 f0       	breq	.+26     	; 0xd4a <vfprintf+0x40e>
     d30:	2d 85       	ldd	r18, Y+13	; 0x0d
     d32:	06 c0       	rjmp	.+12     	; 0xd40 <vfprintf+0x404>
     d34:	b1 01       	movw	r22, r2
     d36:	80 e3       	ldi	r24, 0x30	; 48
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
     d3e:	21 2f       	mov	r18, r17
     d40:	12 2f       	mov	r17, r18
     d42:	11 50       	subi	r17, 0x01	; 1
     d44:	12 16       	cp	r1, r18
     d46:	b4 f3       	brlt	.-20     	; 0xd34 <vfprintf+0x3f8>
     d48:	1d 87       	std	Y+13, r17	; 0x0d
     d4a:	90 e8       	ldi	r25, 0x80	; 128
     d4c:	69 2e       	mov	r6, r25
     d4e:	71 2c       	mov	r7, r1
     d50:	6a 20       	and	r6, r10
     d52:	7b 20       	and	r7, r11
     d54:	a7 fc       	sbrc	r10, 7
     d56:	0d c0       	rjmp	.+26     	; 0xd72 <vfprintf+0x436>
     d58:	8e 85       	ldd	r24, Y+14	; 0x0e
     d5a:	06 c0       	rjmp	.+12     	; 0xd68 <vfprintf+0x42c>
     d5c:	b1 01       	movw	r22, r2
     d5e:	80 e2       	ldi	r24, 0x20	; 32
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
     d66:	81 2f       	mov	r24, r17
     d68:	18 2f       	mov	r17, r24
     d6a:	11 50       	subi	r17, 0x01	; 1
     d6c:	18 16       	cp	r1, r24
     d6e:	b4 f3       	brlt	.-20     	; 0xd5c <vfprintf+0x420>
     d70:	1e 87       	std	Y+14, r17	; 0x0e
     d72:	fa 89       	ldd	r31, Y+18	; 0x12
     d74:	f3 36       	cpi	r31, 0x63	; 99
     d76:	41 f4       	brne	.+16     	; 0xd88 <vfprintf+0x44c>
     d78:	b1 01       	movw	r22, r2
     d7a:	8c 2d       	mov	r24, r12
     d7c:	99 27       	eor	r25, r25
     d7e:	87 fd       	sbrc	r24, 7
     d80:	90 95       	com	r25
     d82:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
     d86:	45 c0       	rjmp	.+138    	; 0xe12 <vfprintf+0x4d6>
     d88:	2a 89       	ldd	r18, Y+18	; 0x12
     d8a:	23 37       	cpi	r18, 0x73	; 115
     d8c:	b1 f4       	brne	.+44     	; 0xdba <vfprintf+0x47e>
     d8e:	46 01       	movw	r8, r12
     d90:	56 01       	movw	r10, r12
     d92:	19 89       	ldd	r17, Y+17	; 0x11
     d94:	09 c0       	rjmp	.+18     	; 0xda8 <vfprintf+0x46c>
     d96:	f5 01       	movw	r30, r10
     d98:	81 91       	ld	r24, Z+
     d9a:	5f 01       	movw	r10, r30
     d9c:	b1 01       	movw	r22, r2
     d9e:	99 27       	eor	r25, r25
     da0:	87 fd       	sbrc	r24, 7
     da2:	90 95       	com	r25
     da4:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
     da8:	11 50       	subi	r17, 0x01	; 1
     daa:	a8 f7       	brcc	.-22     	; 0xd96 <vfprintf+0x45a>
     dac:	64 01       	movw	r12, r8
     dae:	f9 89       	ldd	r31, Y+17	; 0x11
     db0:	cf 0e       	add	r12, r31
     db2:	d1 1c       	adc	r13, r1
     db4:	2f ef       	ldi	r18, 0xFF	; 255
     db6:	29 8b       	std	Y+17, r18	; 0x11
     db8:	2c c0       	rjmp	.+88     	; 0xe12 <vfprintf+0x4d6>
     dba:	3a 89       	ldd	r19, Y+18	; 0x12
     dbc:	33 35       	cpi	r19, 0x53	; 83
     dbe:	19 f0       	breq	.+6      	; 0xdc6 <vfprintf+0x48a>
     dc0:	0f 85       	ldd	r16, Y+15	; 0x0f
     dc2:	18 89       	ldd	r17, Y+16	; 0x10
     dc4:	1f c0       	rjmp	.+62     	; 0xe04 <vfprintf+0x4c8>
     dc6:	46 01       	movw	r8, r12
     dc8:	86 01       	movw	r16, r12
     dca:	b9 88       	ldd	r11, Y+17	; 0x11
     dcc:	08 c0       	rjmp	.+16     	; 0xdde <vfprintf+0x4a2>
     dce:	f8 01       	movw	r30, r16
     dd0:	84 91       	lpm	r24, Z
     dd2:	b1 01       	movw	r22, r2
     dd4:	99 27       	eor	r25, r25
     dd6:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
     dda:	0f 5f       	subi	r16, 0xFF	; 255
     ddc:	1f 4f       	sbci	r17, 0xFF	; 255
     dde:	ba 94       	dec	r11
     de0:	ff ef       	ldi	r31, 0xFF	; 255
     de2:	bf 16       	cp	r11, r31
     de4:	a1 f7       	brne	.-24     	; 0xdce <vfprintf+0x492>
     de6:	64 01       	movw	r12, r8
     de8:	29 89       	ldd	r18, Y+17	; 0x11
     dea:	c2 0e       	add	r12, r18
     dec:	d1 1c       	adc	r13, r1
     dee:	f9 8b       	std	Y+17, r31	; 0x11
     df0:	10 c0       	rjmp	.+32     	; 0xe12 <vfprintf+0x4d6>
     df2:	f8 01       	movw	r30, r16
     df4:	82 91       	ld	r24, -Z
     df6:	8f 01       	movw	r16, r30
     df8:	b1 01       	movw	r22, r2
     dfa:	99 27       	eor	r25, r25
     dfc:	87 fd       	sbrc	r24, 7
     dfe:	90 95       	com	r25
     e00:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
     e04:	ce 01       	movw	r24, r28
     e06:	01 96       	adiw	r24, 0x01	; 1
     e08:	08 17       	cp	r16, r24
     e0a:	19 07       	cpc	r17, r25
     e0c:	91 f7       	brne	.-28     	; 0xdf2 <vfprintf+0x4b6>
     e0e:	18 8b       	std	Y+16, r17	; 0x10
     e10:	0f 87       	std	Y+15, r16	; 0x0f
     e12:	67 28       	or	r6, r7
     e14:	b1 f0       	breq	.+44     	; 0xe42 <vfprintf+0x506>
     e16:	8e 85       	ldd	r24, Y+14	; 0x0e
     e18:	06 c0       	rjmp	.+12     	; 0xe26 <vfprintf+0x4ea>
     e1a:	b1 01       	movw	r22, r2
     e1c:	80 e2       	ldi	r24, 0x20	; 32
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
     e24:	81 2f       	mov	r24, r17
     e26:	18 2f       	mov	r17, r24
     e28:	11 50       	subi	r17, 0x01	; 1
     e2a:	18 16       	cp	r1, r24
     e2c:	b4 f3       	brlt	.-20     	; 0xe1a <vfprintf+0x4de>
     e2e:	1e 87       	std	Y+14, r17	; 0x0e
     e30:	08 c0       	rjmp	.+16     	; 0xe42 <vfprintf+0x506>
     e32:	b1 01       	movw	r22, r2
     e34:	fa 89       	ldd	r31, Y+18	; 0x12
     e36:	8f 2f       	mov	r24, r31
     e38:	99 27       	eor	r25, r25
     e3a:	87 fd       	sbrc	r24, 7
     e3c:	90 95       	com	r25
     e3e:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
     e42:	aa 24       	eor	r10, r10
     e44:	bb 24       	eor	r11, r11
     e46:	13 c0       	rjmp	.+38     	; 0xe6e <vfprintf+0x532>
     e48:	2a 89       	ldd	r18, Y+18	; 0x12
     e4a:	25 32       	cpi	r18, 0x25	; 37
     e4c:	41 f4       	brne	.+16     	; 0xe5e <vfprintf+0x522>
     e4e:	3a e0       	ldi	r19, 0x0A	; 10
     e50:	39 8b       	std	Y+17, r19	; 0x11
     e52:	1e 86       	std	Y+14, r1	; 0x0e
     e54:	1d 86       	std	Y+13, r1	; 0x0d
     e56:	81 e0       	ldi	r24, 0x01	; 1
     e58:	a8 2e       	mov	r10, r24
     e5a:	b1 2c       	mov	r11, r1
     e5c:	08 c0       	rjmp	.+16     	; 0xe6e <vfprintf+0x532>
     e5e:	b1 01       	movw	r22, r2
     e60:	ea 89       	ldd	r30, Y+18	; 0x12
     e62:	8e 2f       	mov	r24, r30
     e64:	99 27       	eor	r25, r25
     e66:	87 fd       	sbrc	r24, 7
     e68:	90 95       	com	r25
     e6a:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
     e6e:	2b 89       	ldd	r18, Y+19	; 0x13
     e70:	3c 89       	ldd	r19, Y+20	; 0x14
     e72:	2f 5f       	subi	r18, 0xFF	; 255
     e74:	3f 4f       	sbci	r19, 0xFF	; 255
     e76:	3c 8b       	std	Y+20, r19	; 0x14
     e78:	2b 8b       	std	Y+19, r18	; 0x13
     e7a:	f1 01       	movw	r30, r2
     e7c:	83 81       	ldd	r24, Z+3	; 0x03
     e7e:	83 ff       	sbrs	r24, 3
     e80:	04 c0       	rjmp	.+8      	; 0xe8a <vfprintf+0x54e>
     e82:	eb 89       	ldd	r30, Y+19	; 0x13
     e84:	fc 89       	ldd	r31, Y+20	; 0x14
     e86:	f4 91       	lpm	r31, Z
     e88:	03 c0       	rjmp	.+6      	; 0xe90 <vfprintf+0x554>
     e8a:	eb 89       	ldd	r30, Y+19	; 0x13
     e8c:	fc 89       	ldd	r31, Y+20	; 0x14
     e8e:	f0 81       	ld	r31, Z
     e90:	fa 8b       	std	Y+18, r31	; 0x12
     e92:	2a 89       	ldd	r18, Y+18	; 0x12
     e94:	22 23       	and	r18, r18
     e96:	09 f0       	breq	.+2      	; 0xe9a <vfprintf+0x55e>
     e98:	7e cd       	rjmp	.-1284   	; 0x996 <vfprintf+0x5a>
     e9a:	f1 01       	movw	r30, r2
     e9c:	86 81       	ldd	r24, Z+6	; 0x06
     e9e:	97 81       	ldd	r25, Z+7	; 0x07
     ea0:	64 96       	adiw	r28, 0x14	; 20
     ea2:	0f b6       	in	r0, 0x3f	; 63
     ea4:	f8 94       	cli
     ea6:	de bf       	out	0x3e, r29	; 62
     ea8:	0f be       	out	0x3f, r0	; 63
     eaa:	cd bf       	out	0x3d, r28	; 61
     eac:	df 91       	pop	r29
     eae:	cf 91       	pop	r28
     eb0:	1f 91       	pop	r17
     eb2:	0f 91       	pop	r16
     eb4:	ff 90       	pop	r15
     eb6:	ef 90       	pop	r14
     eb8:	df 90       	pop	r13
     eba:	cf 90       	pop	r12
     ebc:	bf 90       	pop	r11
     ebe:	af 90       	pop	r10
     ec0:	9f 90       	pop	r9
     ec2:	8f 90       	pop	r8
     ec4:	7f 90       	pop	r7
     ec6:	6f 90       	pop	r6
     ec8:	5f 90       	pop	r5
     eca:	4f 90       	pop	r4
     ecc:	3f 90       	pop	r3
     ece:	2f 90       	pop	r2
     ed0:	08 95       	ret

00000ed2 <vfscanf>:
     ed2:	2f 92       	push	r2
     ed4:	3f 92       	push	r3
     ed6:	4f 92       	push	r4
     ed8:	5f 92       	push	r5
     eda:	6f 92       	push	r6
     edc:	7f 92       	push	r7
     ede:	8f 92       	push	r8
     ee0:	9f 92       	push	r9
     ee2:	af 92       	push	r10
     ee4:	bf 92       	push	r11
     ee6:	cf 92       	push	r12
     ee8:	df 92       	push	r13
     eea:	ef 92       	push	r14
     eec:	ff 92       	push	r15
     eee:	0f 93       	push	r16
     ef0:	1f 93       	push	r17
     ef2:	cf 93       	push	r28
     ef4:	df 93       	push	r29
     ef6:	cd b7       	in	r28, 0x3d	; 61
     ef8:	de b7       	in	r29, 0x3e	; 62
     efa:	2a 97       	sbiw	r28, 0x0a	; 10
     efc:	0f b6       	in	r0, 0x3f	; 63
     efe:	f8 94       	cli
     f00:	de bf       	out	0x3e, r29	; 62
     f02:	0f be       	out	0x3f, r0	; 63
     f04:	cd bf       	out	0x3d, r28	; 61
     f06:	aa 24       	eor	r10, r10
     f08:	bb 24       	eor	r11, r11
     f0a:	65 01       	movw	r12, r10
     f0c:	3c 01       	movw	r6, r24
     f0e:	7a 87       	std	Y+10, r23	; 0x0a
     f10:	69 87       	std	Y+9, r22	; 0x09
     f12:	2a 01       	movw	r4, r20
     f14:	fc 01       	movw	r30, r24
     f16:	17 82       	std	Z+7, r1	; 0x07
     f18:	16 82       	std	Z+6, r1	; 0x06
     f1a:	83 81       	ldd	r24, Z+3	; 0x03
     f1c:	80 fd       	sbrc	r24, 0
     f1e:	05 c0       	rjmp	.+10     	; 0xf2a <vfscanf+0x58>
     f20:	2f ef       	ldi	r18, 0xFF	; 255
     f22:	3f ef       	ldi	r19, 0xFF	; 255
     f24:	3d 83       	std	Y+5, r19	; 0x05
     f26:	2c 83       	std	Y+4, r18	; 0x04
     f28:	5f c2       	rjmp	.+1214   	; 0x13e8 <__stack+0x2e9>
     f2a:	1f 82       	std	Y+7, r1	; 0x07
     f2c:	1e 82       	std	Y+6, r1	; 0x06
     f2e:	4f ef       	ldi	r20, 0xFF	; 255
     f30:	5f ef       	ldi	r21, 0xFF	; 255
     f32:	5d 83       	std	Y+5, r21	; 0x05
     f34:	4c 83       	std	Y+4, r20	; 0x04
     f36:	88 24       	eor	r8, r8
     f38:	99 24       	eor	r9, r9
     f3a:	1b 82       	std	Y+3, r1	; 0x03
     f3c:	1a 82       	std	Y+2, r1	; 0x02
     f3e:	19 82       	std	Y+1, r1	; 0x01
     f40:	1d c2       	rjmp	.+1082   	; 0x137c <__stack+0x27d>
     f42:	59 81       	ldd	r21, Y+1	; 0x01
     f44:	e5 2e       	mov	r14, r21
     f46:	ff 24       	eor	r15, r15
     f48:	e0 fe       	sbrs	r14, 0
     f4a:	db c1       	rjmp	.+950    	; 0x1302 <__stack+0x203>
     f4c:	15 32       	cpi	r17, 0x25	; 37
     f4e:	19 f4       	brne	.+6      	; 0xf56 <vfscanf+0x84>
     f50:	5e 7f       	andi	r21, 0xFE	; 254
     f52:	59 83       	std	Y+1, r21	; 0x01
     f54:	00 c2       	rjmp	.+1024   	; 0x1356 <__stack+0x257>
     f56:	91 2f       	mov	r25, r17
     f58:	90 53       	subi	r25, 0x30	; 48
     f5a:	9a 30       	cpi	r25, 0x0A	; 10
     f5c:	60 f4       	brcc	.+24     	; 0xf76 <vfscanf+0xa4>
     f5e:	8f e7       	ldi	r24, 0x7F	; 127
     f60:	28 16       	cp	r2, r24
     f62:	11 f4       	brne	.+4      	; 0xf68 <vfscanf+0x96>
     f64:	80 e0       	ldi	r24, 0x00	; 0
     f66:	04 c0       	rjmp	.+8      	; 0xf70 <vfscanf+0x9e>
     f68:	8a e0       	ldi	r24, 0x0A	; 10
     f6a:	28 9e       	mul	r2, r24
     f6c:	80 2d       	mov	r24, r0
     f6e:	11 24       	eor	r1, r1
     f70:	28 2e       	mov	r2, r24
     f72:	29 0e       	add	r2, r25
     f74:	fe c1       	rjmp	.+1020   	; 0x1372 <__stack+0x273>
     f76:	81 2f       	mov	r24, r17
     f78:	99 27       	eor	r25, r25
     f7a:	87 fd       	sbrc	r24, 7
     f7c:	90 95       	com	r25
     f7e:	0e 94 8d 0a 	call	0x151a	; 0x151a <tolower>
     f82:	38 2e       	mov	r3, r24
     f84:	9e e6       	ldi	r25, 0x6E	; 110
     f86:	39 16       	cp	r3, r25
     f88:	09 f4       	brne	.+2      	; 0xf8c <vfscanf+0xba>
     f8a:	8c c1       	rjmp	.+792    	; 0x12a4 <__stack+0x1a5>
     f8c:	93 15       	cp	r25, r3
     f8e:	dc f0       	brlt	.+54     	; 0xfc6 <vfscanf+0xf4>
     f90:	a8 e6       	ldi	r26, 0x68	; 104
     f92:	3a 16       	cp	r3, r26
     f94:	09 f4       	brne	.+2      	; 0xf98 <vfscanf+0xc6>
     f96:	ed c1       	rjmp	.+986    	; 0x1372 <__stack+0x273>
     f98:	a3 15       	cp	r26, r3
     f9a:	64 f0       	brlt	.+24     	; 0xfb4 <vfscanf+0xe2>
     f9c:	b3 e6       	ldi	r27, 0x63	; 99
     f9e:	3b 16       	cp	r3, r27
     fa0:	91 f1       	breq	.+100    	; 0x1006 <vfscanf+0x134>
     fa2:	e4 e6       	ldi	r30, 0x64	; 100
     fa4:	3e 16       	cp	r3, r30
     fa6:	09 f4       	brne	.+2      	; 0xfaa <vfscanf+0xd8>
     fa8:	a2 c0       	rjmp	.+324    	; 0x10ee <vfscanf+0x21c>
     faa:	fa e2       	ldi	r31, 0x2A	; 42
     fac:	3f 16       	cp	r3, r31
     fae:	09 f0       	breq	.+2      	; 0xfb2 <vfscanf+0xe0>
     fb0:	88 c1       	rjmp	.+784    	; 0x12c2 <__stack+0x1c3>
     fb2:	21 c0       	rjmp	.+66     	; 0xff6 <vfscanf+0x124>
     fb4:	29 e6       	ldi	r18, 0x69	; 105
     fb6:	32 16       	cp	r3, r18
     fb8:	09 f4       	brne	.+2      	; 0xfbc <vfscanf+0xea>
     fba:	99 c0       	rjmp	.+306    	; 0x10ee <vfscanf+0x21c>
     fbc:	3c e6       	ldi	r19, 0x6C	; 108
     fbe:	33 16       	cp	r3, r19
     fc0:	09 f0       	breq	.+2      	; 0xfc4 <vfscanf+0xf2>
     fc2:	7f c1       	rjmp	.+766    	; 0x12c2 <__stack+0x1c3>
     fc4:	1c c0       	rjmp	.+56     	; 0xffe <vfscanf+0x12c>
     fc6:	43 e7       	ldi	r20, 0x73	; 115
     fc8:	34 16       	cp	r3, r20
     fca:	09 f4       	brne	.+2      	; 0xfce <vfscanf+0xfc>
     fcc:	4b c0       	rjmp	.+150    	; 0x1064 <vfscanf+0x192>
     fce:	43 15       	cp	r20, r3
     fd0:	4c f0       	brlt	.+18     	; 0xfe4 <vfscanf+0x112>
     fd2:	5f e6       	ldi	r21, 0x6F	; 111
     fd4:	35 16       	cp	r3, r21
     fd6:	09 f4       	brne	.+2      	; 0xfda <vfscanf+0x108>
     fd8:	7f c0       	rjmp	.+254    	; 0x10d8 <vfscanf+0x206>
     fda:	80 e7       	ldi	r24, 0x70	; 112
     fdc:	38 16       	cp	r3, r24
     fde:	09 f0       	breq	.+2      	; 0xfe2 <vfscanf+0x110>
     fe0:	70 c1       	rjmp	.+736    	; 0x12c2 <__stack+0x1c3>
     fe2:	80 c0       	rjmp	.+256    	; 0x10e4 <vfscanf+0x212>
     fe4:	95 e7       	ldi	r25, 0x75	; 117
     fe6:	39 16       	cp	r3, r25
     fe8:	09 f4       	brne	.+2      	; 0xfec <vfscanf+0x11a>
     fea:	7e c0       	rjmp	.+252    	; 0x10e8 <vfscanf+0x216>
     fec:	a8 e7       	ldi	r26, 0x78	; 120
     fee:	3a 16       	cp	r3, r26
     ff0:	09 f0       	breq	.+2      	; 0xff4 <vfscanf+0x122>
     ff2:	67 c1       	rjmp	.+718    	; 0x12c2 <__stack+0x1c3>
     ff4:	77 c0       	rjmp	.+238    	; 0x10e4 <vfscanf+0x212>
     ff6:	b9 81       	ldd	r27, Y+1	; 0x01
     ff8:	b0 61       	ori	r27, 0x10	; 16
     ffa:	b9 83       	std	Y+1, r27	; 0x01
     ffc:	ba c1       	rjmp	.+884    	; 0x1372 <__stack+0x273>
     ffe:	e9 81       	ldd	r30, Y+1	; 0x01
    1000:	e4 60       	ori	r30, 0x04	; 4
    1002:	e9 83       	std	Y+1, r30	; 0x01
    1004:	b6 c1       	rjmp	.+876    	; 0x1372 <__stack+0x273>
    1006:	87 01       	movw	r16, r14
    1008:	00 71       	andi	r16, 0x10	; 16
    100a:	10 70       	andi	r17, 0x00	; 0
    100c:	e4 fc       	sbrc	r14, 4
    100e:	07 c0       	rjmp	.+14     	; 0x101e <vfscanf+0x14c>
    1010:	d2 01       	movw	r26, r4
    1012:	ad 90       	ld	r10, X+
    1014:	bc 90       	ld	r11, X
    1016:	e2 e0       	ldi	r30, 0x02	; 2
    1018:	f0 e0       	ldi	r31, 0x00	; 0
    101a:	4e 0e       	add	r4, r30
    101c:	5f 1e       	adc	r5, r31
    101e:	ff e7       	ldi	r31, 0x7F	; 127
    1020:	2f 16       	cp	r2, r31
    1022:	11 f4       	brne	.+4      	; 0x1028 <vfscanf+0x156>
    1024:	31 e0       	ldi	r19, 0x01	; 1
    1026:	23 2e       	mov	r2, r19
    1028:	75 01       	movw	r14, r10
    102a:	0f c0       	rjmp	.+30     	; 0x104a <vfscanf+0x178>
    102c:	c3 01       	movw	r24, r6
    102e:	0e 94 2e 0a 	call	0x145c	; 0x145c <fgetc>
    1032:	4c 01       	movw	r8, r24
    1034:	2f ef       	ldi	r18, 0xFF	; 255
    1036:	8f 3f       	cpi	r24, 0xFF	; 255
    1038:	92 07       	cpc	r25, r18
    103a:	09 f4       	brne	.+2      	; 0x103e <vfscanf+0x16c>
    103c:	d1 c1       	rjmp	.+930    	; 0x13e0 <__stack+0x2e1>
    103e:	01 15       	cp	r16, r1
    1040:	11 05       	cpc	r17, r1
    1042:	19 f4       	brne	.+6      	; 0x104a <vfscanf+0x178>
    1044:	d7 01       	movw	r26, r14
    1046:	8d 93       	st	X+, r24
    1048:	7d 01       	movw	r14, r26
    104a:	2a 94       	dec	r2
    104c:	82 2d       	mov	r24, r2
    104e:	8f 5f       	subi	r24, 0xFF	; 255
    1050:	18 16       	cp	r1, r24
    1052:	64 f3       	brlt	.-40     	; 0x102c <vfscanf+0x15a>
    1054:	57 01       	movw	r10, r14
    1056:	35 c1       	rjmp	.+618    	; 0x12c2 <__stack+0x1c3>
    1058:	57 01       	movw	r10, r14
    105a:	b3 01       	movw	r22, r6
    105c:	c4 01       	movw	r24, r8
    105e:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <ungetc>
    1062:	34 c0       	rjmp	.+104    	; 0x10cc <vfscanf+0x1fa>
    1064:	87 01       	movw	r16, r14
    1066:	00 71       	andi	r16, 0x10	; 16
    1068:	10 70       	andi	r17, 0x00	; 0
    106a:	e4 fc       	sbrc	r14, 4
    106c:	07 c0       	rjmp	.+14     	; 0x107c <vfscanf+0x1aa>
    106e:	f2 01       	movw	r30, r4
    1070:	a0 80       	ld	r10, Z
    1072:	b1 80       	ldd	r11, Z+1	; 0x01
    1074:	22 e0       	ldi	r18, 0x02	; 2
    1076:	30 e0       	ldi	r19, 0x00	; 0
    1078:	42 0e       	add	r4, r18
    107a:	53 1e       	adc	r5, r19
    107c:	c3 01       	movw	r24, r6
    107e:	0e 94 2e 0a 	call	0x145c	; 0x145c <fgetc>
    1082:	4c 01       	movw	r8, r24
    1084:	0e 94 9d 0a 	call	0x153a	; 0x153a <isspace>
    1088:	89 2b       	or	r24, r25
    108a:	c1 f7       	brne	.-16     	; 0x107c <vfscanf+0x1aa>
    108c:	3f ef       	ldi	r19, 0xFF	; 255
    108e:	83 16       	cp	r8, r19
    1090:	3f ef       	ldi	r19, 0xFF	; 255
    1092:	93 06       	cpc	r9, r19
    1094:	09 f4       	brne	.+2      	; 0x1098 <vfscanf+0x1c6>
    1096:	a4 c1       	rjmp	.+840    	; 0x13e0 <__stack+0x2e1>
    1098:	75 01       	movw	r14, r10
    109a:	12 c0       	rjmp	.+36     	; 0x10c0 <vfscanf+0x1ee>
    109c:	c4 01       	movw	r24, r8
    109e:	0e 94 9d 0a 	call	0x153a	; 0x153a <isspace>
    10a2:	89 2b       	or	r24, r25
    10a4:	c9 f6       	brne	.-78     	; 0x1058 <vfscanf+0x186>
    10a6:	01 15       	cp	r16, r1
    10a8:	11 05       	cpc	r17, r1
    10aa:	19 f4       	brne	.+6      	; 0x10b2 <vfscanf+0x1e0>
    10ac:	d7 01       	movw	r26, r14
    10ae:	8d 92       	st	X+, r8
    10b0:	7d 01       	movw	r14, r26
    10b2:	c3 01       	movw	r24, r6
    10b4:	0e 94 2e 0a 	call	0x145c	; 0x145c <fgetc>
    10b8:	4c 01       	movw	r8, r24
    10ba:	8f 5f       	subi	r24, 0xFF	; 255
    10bc:	9f 4f       	sbci	r25, 0xFF	; 255
    10be:	29 f0       	breq	.+10     	; 0x10ca <vfscanf+0x1f8>
    10c0:	2a 94       	dec	r2
    10c2:	82 2d       	mov	r24, r2
    10c4:	8f 5f       	subi	r24, 0xFF	; 255
    10c6:	18 16       	cp	r1, r24
    10c8:	4c f3       	brlt	.-46     	; 0x109c <vfscanf+0x1ca>
    10ca:	57 01       	movw	r10, r14
    10cc:	01 2b       	or	r16, r17
    10ce:	09 f0       	breq	.+2      	; 0x10d2 <vfscanf+0x200>
    10d0:	f8 c0       	rjmp	.+496    	; 0x12c2 <__stack+0x1c3>
    10d2:	f5 01       	movw	r30, r10
    10d4:	10 82       	st	Z, r1
    10d6:	f5 c0       	rjmp	.+490    	; 0x12c2 <__stack+0x1c3>
    10d8:	e9 81       	ldd	r30, Y+1	; 0x01
    10da:	e2 60       	ori	r30, 0x02	; 2
    10dc:	e9 83       	std	Y+1, r30	; 0x01
    10de:	f8 e0       	ldi	r31, 0x08	; 8
    10e0:	f8 87       	std	Y+8, r31	; 0x08
    10e2:	05 c0       	rjmp	.+10     	; 0x10ee <vfscanf+0x21c>
    10e4:	20 e1       	ldi	r18, 0x10	; 16
    10e6:	28 87       	std	Y+8, r18	; 0x08
    10e8:	39 81       	ldd	r19, Y+1	; 0x01
    10ea:	32 60       	ori	r19, 0x02	; 2
    10ec:	39 83       	std	Y+1, r19	; 0x01
    10ee:	c3 01       	movw	r24, r6
    10f0:	0e 94 2e 0a 	call	0x145c	; 0x145c <fgetc>
    10f4:	4c 01       	movw	r8, r24
    10f6:	0e 94 9d 0a 	call	0x153a	; 0x153a <isspace>
    10fa:	89 2b       	or	r24, r25
    10fc:	c1 f7       	brne	.-16     	; 0x10ee <vfscanf+0x21c>
    10fe:	4f ef       	ldi	r20, 0xFF	; 255
    1100:	84 16       	cp	r8, r20
    1102:	4f ef       	ldi	r20, 0xFF	; 255
    1104:	94 06       	cpc	r9, r20
    1106:	09 f4       	brne	.+2      	; 0x110a <__stack+0xb>
    1108:	47 c1       	rjmp	.+654    	; 0x1398 <__stack+0x299>
    110a:	88 2d       	mov	r24, r8
    110c:	8d 32       	cpi	r24, 0x2D	; 45
    110e:	11 f0       	breq	.+4      	; 0x1114 <__stack+0x15>
    1110:	8b 32       	cpi	r24, 0x2B	; 43
    1112:	99 f4       	brne	.+38     	; 0x113a <__stack+0x3b>
    1114:	2a 94       	dec	r2
    1116:	12 14       	cp	r1, r2
    1118:	0c f0       	brlt	.+2      	; 0x111c <__stack+0x1d>
    111a:	3e c1       	rjmp	.+636    	; 0x1398 <__stack+0x299>
    111c:	8d 32       	cpi	r24, 0x2D	; 45
    111e:	19 f4       	brne	.+6      	; 0x1126 <__stack+0x27>
    1120:	59 81       	ldd	r21, Y+1	; 0x01
    1122:	58 60       	ori	r21, 0x08	; 8
    1124:	59 83       	std	Y+1, r21	; 0x01
    1126:	c3 01       	movw	r24, r6
    1128:	0e 94 2e 0a 	call	0x145c	; 0x145c <fgetc>
    112c:	4c 01       	movw	r8, r24
    112e:	8f ef       	ldi	r24, 0xFF	; 255
    1130:	88 16       	cp	r8, r24
    1132:	8f ef       	ldi	r24, 0xFF	; 255
    1134:	98 06       	cpc	r9, r24
    1136:	09 f4       	brne	.+2      	; 0x113a <__stack+0x3b>
    1138:	2f c1       	rjmp	.+606    	; 0x1398 <__stack+0x299>
    113a:	90 e3       	ldi	r25, 0x30	; 48
    113c:	89 16       	cp	r8, r25
    113e:	a1 f5       	brne	.+104    	; 0x11a8 <__stack+0xa9>
    1140:	aa 24       	eor	r10, r10
    1142:	bb 24       	eor	r11, r11
    1144:	65 01       	movw	r12, r10
    1146:	2a 94       	dec	r2
    1148:	12 14       	cp	r1, r2
    114a:	0c f0       	brlt	.+2      	; 0x114e <__stack+0x4f>
    114c:	7e c0       	rjmp	.+252    	; 0x124a <__stack+0x14b>
    114e:	c3 01       	movw	r24, r6
    1150:	0e 94 2e 0a 	call	0x145c	; 0x145c <fgetc>
    1154:	4c 01       	movw	r8, r24
    1156:	af ef       	ldi	r26, 0xFF	; 255
    1158:	8f 3f       	cpi	r24, 0xFF	; 255
    115a:	9a 07       	cpc	r25, r26
    115c:	09 f4       	brne	.+2      	; 0x1160 <__stack+0x61>
    115e:	75 c0       	rjmp	.+234    	; 0x124a <__stack+0x14b>
    1160:	0e 94 8d 0a 	call	0x151a	; 0x151a <tolower>
    1164:	88 37       	cpi	r24, 0x78	; 120
    1166:	d9 f4       	brne	.+54     	; 0x119e <__stack+0x9f>
    1168:	bf e6       	ldi	r27, 0x6F	; 111
    116a:	3b 16       	cp	r3, r27
    116c:	31 f0       	breq	.+12     	; 0x117a <__stack+0x7b>
    116e:	e4 e6       	ldi	r30, 0x64	; 100
    1170:	3e 16       	cp	r3, r30
    1172:	19 f0       	breq	.+6      	; 0x117a <__stack+0x7b>
    1174:	f5 e7       	ldi	r31, 0x75	; 117
    1176:	3f 16       	cp	r3, r31
    1178:	29 f4       	brne	.+10     	; 0x1184 <__stack+0x85>
    117a:	b3 01       	movw	r22, r6
    117c:	c4 01       	movw	r24, r8
    117e:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <ungetc>
    1182:	63 c0       	rjmp	.+198    	; 0x124a <__stack+0x14b>
    1184:	c3 01       	movw	r24, r6
    1186:	0e 94 2e 0a 	call	0x145c	; 0x145c <fgetc>
    118a:	4c 01       	movw	r8, r24
    118c:	8f 5f       	subi	r24, 0xFF	; 255
    118e:	9f 4f       	sbci	r25, 0xFF	; 255
    1190:	19 f4       	brne	.+6      	; 0x1198 <__stack+0x99>
    1192:	30 e1       	ldi	r19, 0x10	; 16
    1194:	38 87       	std	Y+8, r19	; 0x08
    1196:	59 c0       	rjmp	.+178    	; 0x124a <__stack+0x14b>
    1198:	40 e1       	ldi	r20, 0x10	; 16
    119a:	48 87       	std	Y+8, r20	; 0x08
    119c:	05 c0       	rjmp	.+10     	; 0x11a8 <__stack+0xa9>
    119e:	59 e6       	ldi	r21, 0x69	; 105
    11a0:	35 16       	cp	r3, r21
    11a2:	11 f4       	brne	.+4      	; 0x11a8 <__stack+0xa9>
    11a4:	88 e0       	ldi	r24, 0x08	; 8
    11a6:	88 87       	std	Y+8, r24	; 0x08
    11a8:	ee 24       	eor	r14, r14
    11aa:	ff 24       	eor	r15, r15
    11ac:	87 01       	movw	r16, r14
    11ae:	c4 01       	movw	r24, r8
    11b0:	0e 94 8d 0a 	call	0x151a	; 0x151a <tolower>
    11b4:	20 ed       	ldi	r18, 0xD0	; 208
    11b6:	c2 2e       	mov	r12, r18
    11b8:	2f ef       	ldi	r18, 0xFF	; 255
    11ba:	d2 2e       	mov	r13, r18
    11bc:	c8 0e       	add	r12, r24
    11be:	d9 1e       	adc	r13, r25
    11c0:	9a e0       	ldi	r25, 0x0A	; 10
    11c2:	c9 16       	cp	r12, r25
    11c4:	d1 04       	cpc	r13, r1
    11c6:	3c f0       	brlt	.+14     	; 0x11d6 <__stack+0xd7>
    11c8:	c6 01       	movw	r24, r12
    11ca:	c1 97       	sbiw	r24, 0x31	; 49
    11cc:	62 f0       	brmi	.+24     	; 0x11e6 <__stack+0xe7>
    11ce:	a9 ed       	ldi	r26, 0xD9	; 217
    11d0:	bf ef       	ldi	r27, 0xFF	; 255
    11d2:	ca 0e       	add	r12, r26
    11d4:	db 1e       	adc	r13, r27
    11d6:	d7 fc       	sbrc	r13, 7
    11d8:	06 c0       	rjmp	.+12     	; 0x11e6 <__stack+0xe7>
    11da:	b8 85       	ldd	r27, Y+8	; 0x08
    11dc:	8b 2f       	mov	r24, r27
    11de:	99 27       	eor	r25, r25
    11e0:	c8 16       	cp	r12, r24
    11e2:	d9 06       	cpc	r13, r25
    11e4:	3c f0       	brlt	.+14     	; 0x11f4 <__stack+0xf5>
    11e6:	57 01       	movw	r10, r14
    11e8:	68 01       	movw	r12, r16
    11ea:	b3 01       	movw	r22, r6
    11ec:	c4 01       	movw	r24, r8
    11ee:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <ungetc>
    11f2:	21 c0       	rjmp	.+66     	; 0x1236 <__stack+0x137>
    11f4:	e8 85       	ldd	r30, Y+8	; 0x08
    11f6:	2e 2f       	mov	r18, r30
    11f8:	33 27       	eor	r19, r19
    11fa:	44 27       	eor	r20, r20
    11fc:	55 27       	eor	r21, r21
    11fe:	c8 01       	movw	r24, r16
    1200:	b7 01       	movw	r22, r14
    1202:	0e 94 af 0a 	call	0x155e	; 0x155e <__mulsi3>
    1206:	7b 01       	movw	r14, r22
    1208:	8c 01       	movw	r16, r24
    120a:	c6 01       	movw	r24, r12
    120c:	aa 27       	eor	r26, r26
    120e:	97 fd       	sbrc	r25, 7
    1210:	a0 95       	com	r26
    1212:	ba 2f       	mov	r27, r26
    1214:	e8 0e       	add	r14, r24
    1216:	f9 1e       	adc	r15, r25
    1218:	0a 1f       	adc	r16, r26
    121a:	1b 1f       	adc	r17, r27
    121c:	2a 94       	dec	r2
    121e:	12 14       	cp	r1, r2
    1220:	44 f4       	brge	.+16     	; 0x1232 <__stack+0x133>
    1222:	c3 01       	movw	r24, r6
    1224:	0e 94 2e 0a 	call	0x145c	; 0x145c <fgetc>
    1228:	4c 01       	movw	r8, r24
    122a:	8f 5f       	subi	r24, 0xFF	; 255
    122c:	9f 4f       	sbci	r25, 0xFF	; 255
    122e:	09 f0       	breq	.+2      	; 0x1232 <__stack+0x133>
    1230:	be cf       	rjmp	.-132    	; 0x11ae <__stack+0xaf>
    1232:	57 01       	movw	r10, r14
    1234:	68 01       	movw	r12, r16
    1236:	29 81       	ldd	r18, Y+1	; 0x01
    1238:	23 ff       	sbrs	r18, 3
    123a:	07 c0       	rjmp	.+14     	; 0x124a <__stack+0x14b>
    123c:	aa 24       	eor	r10, r10
    123e:	bb 24       	eor	r11, r11
    1240:	65 01       	movw	r12, r10
    1242:	ae 18       	sub	r10, r14
    1244:	bf 08       	sbc	r11, r15
    1246:	c0 0a       	sbc	r12, r16
    1248:	d1 0a       	sbc	r13, r17
    124a:	49 81       	ldd	r20, Y+1	; 0x01
    124c:	24 2f       	mov	r18, r20
    124e:	33 27       	eor	r19, r19
    1250:	24 fd       	sbrc	r18, 4
    1252:	37 c0       	rjmp	.+110    	; 0x12c2 <__stack+0x1c3>
    1254:	c9 01       	movw	r24, r18
    1256:	86 70       	andi	r24, 0x06	; 6
    1258:	90 70       	andi	r25, 0x00	; 0
    125a:	06 97       	sbiw	r24, 0x06	; 6
    125c:	41 f4       	brne	.+16     	; 0x126e <__stack+0x16f>
    125e:	d2 01       	movw	r26, r4
    1260:	ed 91       	ld	r30, X+
    1262:	fc 91       	ld	r31, X
    1264:	a0 82       	st	Z, r10
    1266:	b1 82       	std	Z+1, r11	; 0x01
    1268:	c2 82       	std	Z+2, r12	; 0x02
    126a:	d3 82       	std	Z+3, r13	; 0x03
    126c:	26 c0       	rjmp	.+76     	; 0x12ba <__stack+0x1bb>
    126e:	21 ff       	sbrs	r18, 1
    1270:	06 c0       	rjmp	.+12     	; 0x127e <__stack+0x17f>
    1272:	d2 01       	movw	r26, r4
    1274:	ed 91       	ld	r30, X+
    1276:	fc 91       	ld	r31, X
    1278:	b1 82       	std	Z+1, r11	; 0x01
    127a:	a0 82       	st	Z, r10
    127c:	1e c0       	rjmp	.+60     	; 0x12ba <__stack+0x1bb>
    127e:	c2 01       	movw	r24, r4
    1280:	02 96       	adiw	r24, 0x02	; 2
    1282:	22 ff       	sbrs	r18, 2
    1284:	08 c0       	rjmp	.+16     	; 0x1296 <__stack+0x197>
    1286:	d2 01       	movw	r26, r4
    1288:	ed 91       	ld	r30, X+
    128a:	fc 91       	ld	r31, X
    128c:	a0 82       	st	Z, r10
    128e:	b1 82       	std	Z+1, r11	; 0x01
    1290:	c2 82       	std	Z+2, r12	; 0x02
    1292:	d3 82       	std	Z+3, r13	; 0x03
    1294:	05 c0       	rjmp	.+10     	; 0x12a0 <__stack+0x1a1>
    1296:	d2 01       	movw	r26, r4
    1298:	ed 91       	ld	r30, X+
    129a:	fc 91       	ld	r31, X
    129c:	b1 82       	std	Z+1, r11	; 0x01
    129e:	a0 82       	st	Z, r10
    12a0:	2c 01       	movw	r4, r24
    12a2:	0f c0       	rjmp	.+30     	; 0x12c2 <__stack+0x1c3>
    12a4:	e4 fc       	sbrc	r14, 4
    12a6:	0d c0       	rjmp	.+26     	; 0x12c2 <__stack+0x1c3>
    12a8:	f2 01       	movw	r30, r4
    12aa:	20 81       	ld	r18, Z
    12ac:	31 81       	ldd	r19, Z+1	; 0x01
    12ae:	f3 01       	movw	r30, r6
    12b0:	86 81       	ldd	r24, Z+6	; 0x06
    12b2:	97 81       	ldd	r25, Z+7	; 0x07
    12b4:	d9 01       	movw	r26, r18
    12b6:	8d 93       	st	X+, r24
    12b8:	9c 93       	st	X, r25
    12ba:	e2 e0       	ldi	r30, 0x02	; 2
    12bc:	f0 e0       	ldi	r31, 0x00	; 0
    12be:	4e 0e       	add	r4, r30
    12c0:	5f 1e       	adc	r5, r31
    12c2:	f3 01       	movw	r30, r6
    12c4:	86 81       	ldd	r24, Z+6	; 0x06
    12c6:	97 81       	ldd	r25, Z+7	; 0x07
    12c8:	2a 81       	ldd	r18, Y+2	; 0x02
    12ca:	3b 81       	ldd	r19, Y+3	; 0x03
    12cc:	28 17       	cp	r18, r24
    12ce:	39 07       	cpc	r19, r25
    12d0:	6c f4       	brge	.+26     	; 0x12ec <__stack+0x1ed>
    12d2:	39 81       	ldd	r19, Y+1	; 0x01
    12d4:	34 fd       	sbrc	r19, 4
    12d6:	06 c0       	rjmp	.+12     	; 0x12e4 <__stack+0x1e5>
    12d8:	4e 81       	ldd	r20, Y+6	; 0x06
    12da:	5f 81       	ldd	r21, Y+7	; 0x07
    12dc:	4f 5f       	subi	r20, 0xFF	; 255
    12de:	5f 4f       	sbci	r21, 0xFF	; 255
    12e0:	5f 83       	std	Y+7, r21	; 0x07
    12e2:	4e 83       	std	Y+6, r20	; 0x06
    12e4:	1d 82       	std	Y+5, r1	; 0x05
    12e6:	1c 82       	std	Y+4, r1	; 0x04
    12e8:	19 82       	std	Y+1, r1	; 0x01
    12ea:	43 c0       	rjmp	.+134    	; 0x1372 <__stack+0x273>
    12ec:	5e e6       	ldi	r21, 0x6E	; 110
    12ee:	35 16       	cp	r3, r21
    12f0:	09 f0       	breq	.+2      	; 0x12f4 <__stack+0x1f5>
    12f2:	52 c0       	rjmp	.+164    	; 0x1398 <__stack+0x299>
    12f4:	8f ef       	ldi	r24, 0xFF	; 255
    12f6:	88 16       	cp	r8, r24
    12f8:	8f ef       	ldi	r24, 0xFF	; 255
    12fa:	98 06       	cpc	r9, r24
    12fc:	09 f4       	brne	.+2      	; 0x1300 <__stack+0x201>
    12fe:	4c c0       	rjmp	.+152    	; 0x1398 <__stack+0x299>
    1300:	f3 cf       	rjmp	.-26     	; 0x12e8 <__stack+0x1e9>
    1302:	15 32       	cpi	r17, 0x25	; 37
    1304:	69 f4       	brne	.+26     	; 0x1320 <__stack+0x221>
    1306:	f3 01       	movw	r30, r6
    1308:	06 80       	ldd	r0, Z+6	; 0x06
    130a:	f7 81       	ldd	r31, Z+7	; 0x07
    130c:	e0 2d       	mov	r30, r0
    130e:	fb 83       	std	Y+3, r31	; 0x03
    1310:	ea 83       	std	Y+2, r30	; 0x02
    1312:	fa e0       	ldi	r31, 0x0A	; 10
    1314:	f8 87       	std	Y+8, r31	; 0x08
    1316:	8f e7       	ldi	r24, 0x7F	; 127
    1318:	28 2e       	mov	r2, r24
    131a:	21 e0       	ldi	r18, 0x01	; 1
    131c:	29 83       	std	Y+1, r18	; 0x01
    131e:	29 c0       	rjmp	.+82     	; 0x1372 <__stack+0x273>
    1320:	81 2f       	mov	r24, r17
    1322:	99 27       	eor	r25, r25
    1324:	87 fd       	sbrc	r24, 7
    1326:	90 95       	com	r25
    1328:	0e 94 9d 0a 	call	0x153a	; 0x153a <isspace>
    132c:	89 2b       	or	r24, r25
    132e:	99 f0       	breq	.+38     	; 0x1356 <__stack+0x257>
    1330:	c3 01       	movw	r24, r6
    1332:	0e 94 2e 0a 	call	0x145c	; 0x145c <fgetc>
    1336:	4c 01       	movw	r8, r24
    1338:	0e 94 9d 0a 	call	0x153a	; 0x153a <isspace>
    133c:	89 2b       	or	r24, r25
    133e:	c1 f7       	brne	.-16     	; 0x1330 <__stack+0x231>
    1340:	3f ef       	ldi	r19, 0xFF	; 255
    1342:	83 16       	cp	r8, r19
    1344:	3f ef       	ldi	r19, 0xFF	; 255
    1346:	93 06       	cpc	r9, r19
    1348:	09 f4       	brne	.+2      	; 0x134c <__stack+0x24d>
    134a:	41 c0       	rjmp	.+130    	; 0x13ce <__stack+0x2cf>
    134c:	b3 01       	movw	r22, r6
    134e:	c4 01       	movw	r24, r8
    1350:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <ungetc>
    1354:	0e c0       	rjmp	.+28     	; 0x1372 <__stack+0x273>
    1356:	c3 01       	movw	r24, r6
    1358:	0e 94 2e 0a 	call	0x145c	; 0x145c <fgetc>
    135c:	4c 01       	movw	r8, r24
    135e:	8f 5f       	subi	r24, 0xFF	; 255
    1360:	9f 4f       	sbci	r25, 0xFF	; 255
    1362:	d1 f0       	breq	.+52     	; 0x1398 <__stack+0x299>
    1364:	81 2f       	mov	r24, r17
    1366:	99 27       	eor	r25, r25
    1368:	87 fd       	sbrc	r24, 7
    136a:	90 95       	com	r25
    136c:	88 16       	cp	r8, r24
    136e:	99 06       	cpc	r9, r25
    1370:	99 f4       	brne	.+38     	; 0x1398 <__stack+0x299>
    1372:	89 85       	ldd	r24, Y+9	; 0x09
    1374:	9a 85       	ldd	r25, Y+10	; 0x0a
    1376:	01 96       	adiw	r24, 0x01	; 1
    1378:	9a 87       	std	Y+10, r25	; 0x0a
    137a:	89 87       	std	Y+9, r24	; 0x09
    137c:	f3 01       	movw	r30, r6
    137e:	83 81       	ldd	r24, Z+3	; 0x03
    1380:	83 ff       	sbrs	r24, 3
    1382:	04 c0       	rjmp	.+8      	; 0x138c <__stack+0x28d>
    1384:	e9 85       	ldd	r30, Y+9	; 0x09
    1386:	fa 85       	ldd	r31, Y+10	; 0x0a
    1388:	14 91       	lpm	r17, Z
    138a:	03 c0       	rjmp	.+6      	; 0x1392 <__stack+0x293>
    138c:	a9 85       	ldd	r26, Y+9	; 0x09
    138e:	ba 85       	ldd	r27, Y+10	; 0x0a
    1390:	1c 91       	ld	r17, X
    1392:	11 23       	and	r17, r17
    1394:	09 f0       	breq	.+2      	; 0x1398 <__stack+0x299>
    1396:	d5 cd       	rjmp	.-1110   	; 0xf42 <vfscanf+0x70>
    1398:	b9 81       	ldd	r27, Y+1	; 0x01
    139a:	2b 2f       	mov	r18, r27
    139c:	33 27       	eor	r19, r19
    139e:	20 ff       	sbrs	r18, 0
    13a0:	11 c0       	rjmp	.+34     	; 0x13c4 <__stack+0x2c5>
    13a2:	f3 01       	movw	r30, r6
    13a4:	86 81       	ldd	r24, Z+6	; 0x06
    13a6:	97 81       	ldd	r25, Z+7	; 0x07
    13a8:	4a 81       	ldd	r20, Y+2	; 0x02
    13aa:	5b 81       	ldd	r21, Y+3	; 0x03
    13ac:	48 17       	cp	r20, r24
    13ae:	59 07       	cpc	r21, r25
    13b0:	4c f4       	brge	.+18     	; 0x13c4 <__stack+0x2c5>
    13b2:	24 fd       	sbrc	r18, 4
    13b4:	05 c0       	rjmp	.+10     	; 0x13c0 <__stack+0x2c1>
    13b6:	8e 81       	ldd	r24, Y+6	; 0x06
    13b8:	9f 81       	ldd	r25, Y+7	; 0x07
    13ba:	01 96       	adiw	r24, 0x01	; 1
    13bc:	9f 83       	std	Y+7, r25	; 0x07
    13be:	8e 83       	std	Y+6, r24	; 0x06
    13c0:	1d 82       	std	Y+5, r1	; 0x05
    13c2:	1c 82       	std	Y+4, r1	; 0x04
    13c4:	9f ef       	ldi	r25, 0xFF	; 255
    13c6:	89 16       	cp	r8, r25
    13c8:	9f ef       	ldi	r25, 0xFF	; 255
    13ca:	99 06       	cpc	r9, r25
    13cc:	21 f4       	brne	.+8      	; 0x13d6 <__stack+0x2d7>
    13ce:	ae 81       	ldd	r26, Y+6	; 0x06
    13d0:	bf 81       	ldd	r27, Y+7	; 0x07
    13d2:	ab 2b       	or	r26, r27
    13d4:	49 f0       	breq	.+18     	; 0x13e8 <__stack+0x2e9>
    13d6:	ee 81       	ldd	r30, Y+6	; 0x06
    13d8:	ff 81       	ldd	r31, Y+7	; 0x07
    13da:	fd 83       	std	Y+5, r31	; 0x05
    13dc:	ec 83       	std	Y+4, r30	; 0x04
    13de:	04 c0       	rjmp	.+8      	; 0x13e8 <__stack+0x2e9>
    13e0:	f9 81       	ldd	r31, Y+1	; 0x01
    13e2:	2f 2f       	mov	r18, r31
    13e4:	33 27       	eor	r19, r19
    13e6:	dd cf       	rjmp	.-70     	; 0x13a2 <__stack+0x2a3>
    13e8:	8c 81       	ldd	r24, Y+4	; 0x04
    13ea:	9d 81       	ldd	r25, Y+5	; 0x05
    13ec:	2a 96       	adiw	r28, 0x0a	; 10
    13ee:	0f b6       	in	r0, 0x3f	; 63
    13f0:	f8 94       	cli
    13f2:	de bf       	out	0x3e, r29	; 62
    13f4:	0f be       	out	0x3f, r0	; 63
    13f6:	cd bf       	out	0x3d, r28	; 61
    13f8:	df 91       	pop	r29
    13fa:	cf 91       	pop	r28
    13fc:	1f 91       	pop	r17
    13fe:	0f 91       	pop	r16
    1400:	ff 90       	pop	r15
    1402:	ef 90       	pop	r14
    1404:	df 90       	pop	r13
    1406:	cf 90       	pop	r12
    1408:	bf 90       	pop	r11
    140a:	af 90       	pop	r10
    140c:	9f 90       	pop	r9
    140e:	8f 90       	pop	r8
    1410:	7f 90       	pop	r7
    1412:	6f 90       	pop	r6
    1414:	5f 90       	pop	r5
    1416:	4f 90       	pop	r4
    1418:	3f 90       	pop	r3
    141a:	2f 90       	pop	r2
    141c:	08 95       	ret

0000141e <strlen_P>:
    141e:	fc 01       	movw	r30, r24
    1420:	05 90       	lpm	r0, Z+
    1422:	00 20       	and	r0, r0
    1424:	e9 f7       	brne	.-6      	; 0x1420 <strlen_P+0x2>
    1426:	80 95       	com	r24
    1428:	90 95       	com	r25
    142a:	8e 0f       	add	r24, r30
    142c:	9f 1f       	adc	r25, r31
    142e:	08 95       	ret

00001430 <strnlen_P>:
    1430:	fc 01       	movw	r30, r24
    1432:	05 90       	lpm	r0, Z+
    1434:	61 50       	subi	r22, 0x01	; 1
    1436:	70 40       	sbci	r23, 0x00	; 0
    1438:	01 10       	cpse	r0, r1
    143a:	d8 f7       	brcc	.-10     	; 0x1432 <strnlen_P+0x2>
    143c:	80 95       	com	r24
    143e:	90 95       	com	r25
    1440:	8e 0f       	add	r24, r30
    1442:	9f 1f       	adc	r25, r31
    1444:	08 95       	ret

00001446 <strnlen>:
    1446:	fc 01       	movw	r30, r24
    1448:	61 50       	subi	r22, 0x01	; 1
    144a:	70 40       	sbci	r23, 0x00	; 0
    144c:	01 90       	ld	r0, Z+
    144e:	01 10       	cpse	r0, r1
    1450:	d8 f7       	brcc	.-10     	; 0x1448 <strnlen+0x2>
    1452:	80 95       	com	r24
    1454:	90 95       	com	r25
    1456:	8e 0f       	add	r24, r30
    1458:	9f 1f       	adc	r25, r31
    145a:	08 95       	ret

0000145c <fgetc>:
    145c:	cf 93       	push	r28
    145e:	df 93       	push	r29
    1460:	ec 01       	movw	r28, r24
    1462:	2b 81       	ldd	r18, Y+3	; 0x03
    1464:	82 2f       	mov	r24, r18
    1466:	99 27       	eor	r25, r25
    1468:	80 ff       	sbrs	r24, 0
    146a:	15 c0       	rjmp	.+42     	; 0x1496 <fgetc+0x3a>
    146c:	86 ff       	sbrs	r24, 6
    146e:	0a c0       	rjmp	.+20     	; 0x1484 <fgetc+0x28>
    1470:	2f 7b       	andi	r18, 0xBF	; 191
    1472:	2b 83       	std	Y+3, r18	; 0x03
    1474:	8e 81       	ldd	r24, Y+6	; 0x06
    1476:	9f 81       	ldd	r25, Y+7	; 0x07
    1478:	01 96       	adiw	r24, 0x01	; 1
    147a:	9f 83       	std	Y+7, r25	; 0x07
    147c:	8e 83       	std	Y+6, r24	; 0x06
    147e:	8a 81       	ldd	r24, Y+2	; 0x02
    1480:	99 27       	eor	r25, r25
    1482:	2c c0       	rjmp	.+88     	; 0x14dc <fgetc+0x80>
    1484:	82 ff       	sbrs	r24, 2
    1486:	12 c0       	rjmp	.+36     	; 0x14ac <fgetc+0x50>
    1488:	e8 81       	ld	r30, Y
    148a:	f9 81       	ldd	r31, Y+1	; 0x01
    148c:	80 81       	ld	r24, Z
    148e:	88 23       	and	r24, r24
    1490:	29 f4       	brne	.+10     	; 0x149c <fgetc+0x40>
    1492:	20 62       	ori	r18, 0x20	; 32
    1494:	2b 83       	std	Y+3, r18	; 0x03
    1496:	8f ef       	ldi	r24, 0xFF	; 255
    1498:	9f ef       	ldi	r25, 0xFF	; 255
    149a:	20 c0       	rjmp	.+64     	; 0x14dc <fgetc+0x80>
    149c:	28 2f       	mov	r18, r24
    149e:	33 27       	eor	r19, r19
    14a0:	27 fd       	sbrc	r18, 7
    14a2:	30 95       	com	r19
    14a4:	31 96       	adiw	r30, 0x01	; 1
    14a6:	f9 83       	std	Y+1, r31	; 0x01
    14a8:	e8 83       	st	Y, r30
    14aa:	11 c0       	rjmp	.+34     	; 0x14ce <fgetc+0x72>
    14ac:	ea 85       	ldd	r30, Y+10	; 0x0a
    14ae:	fb 85       	ldd	r31, Y+11	; 0x0b
    14b0:	ce 01       	movw	r24, r28
    14b2:	09 95       	icall
    14b4:	9c 01       	movw	r18, r24
    14b6:	97 ff       	sbrs	r25, 7
    14b8:	0a c0       	rjmp	.+20     	; 0x14ce <fgetc+0x72>
    14ba:	8b 81       	ldd	r24, Y+3	; 0x03
    14bc:	2f 5f       	subi	r18, 0xFF	; 255
    14be:	3f 4f       	sbci	r19, 0xFF	; 255
    14c0:	11 f4       	brne	.+4      	; 0x14c6 <fgetc+0x6a>
    14c2:	90 e1       	ldi	r25, 0x10	; 16
    14c4:	01 c0       	rjmp	.+2      	; 0x14c8 <fgetc+0x6c>
    14c6:	90 e2       	ldi	r25, 0x20	; 32
    14c8:	89 2b       	or	r24, r25
    14ca:	8b 83       	std	Y+3, r24	; 0x03
    14cc:	e4 cf       	rjmp	.-56     	; 0x1496 <fgetc+0x3a>
    14ce:	8e 81       	ldd	r24, Y+6	; 0x06
    14d0:	9f 81       	ldd	r25, Y+7	; 0x07
    14d2:	01 96       	adiw	r24, 0x01	; 1
    14d4:	9f 83       	std	Y+7, r25	; 0x07
    14d6:	8e 83       	std	Y+6, r24	; 0x06
    14d8:	82 2f       	mov	r24, r18
    14da:	99 27       	eor	r25, r25
    14dc:	df 91       	pop	r29
    14de:	cf 91       	pop	r28
    14e0:	08 95       	ret

000014e2 <ungetc>:
    14e2:	ac 01       	movw	r20, r24
    14e4:	fb 01       	movw	r30, r22
    14e6:	23 81       	ldd	r18, Z+3	; 0x03
    14e8:	82 2f       	mov	r24, r18
    14ea:	99 27       	eor	r25, r25
    14ec:	80 ff       	sbrs	r24, 0
    14ee:	12 c0       	rjmp	.+36     	; 0x1514 <ungetc+0x32>
    14f0:	86 fd       	sbrc	r24, 6
    14f2:	10 c0       	rjmp	.+32     	; 0x1514 <ungetc+0x32>
    14f4:	8f ef       	ldi	r24, 0xFF	; 255
    14f6:	4f 3f       	cpi	r20, 0xFF	; 255
    14f8:	58 07       	cpc	r21, r24
    14fa:	61 f0       	breq	.+24     	; 0x1514 <ungetc+0x32>
    14fc:	42 83       	std	Z+2, r20	; 0x02
    14fe:	20 64       	ori	r18, 0x40	; 64
    1500:	2f 7d       	andi	r18, 0xDF	; 223
    1502:	23 83       	std	Z+3, r18	; 0x03
    1504:	86 81       	ldd	r24, Z+6	; 0x06
    1506:	97 81       	ldd	r25, Z+7	; 0x07
    1508:	01 97       	sbiw	r24, 0x01	; 1
    150a:	97 83       	std	Z+7, r25	; 0x07
    150c:	86 83       	std	Z+6, r24	; 0x06
    150e:	84 2f       	mov	r24, r20
    1510:	99 27       	eor	r25, r25
    1512:	08 95       	ret
    1514:	8f ef       	ldi	r24, 0xFF	; 255
    1516:	9f ef       	ldi	r25, 0xFF	; 255
    1518:	08 95       	ret

0000151a <tolower>:
    151a:	8f 93       	push	r24
    151c:	06 d0       	rcall	.+12     	; 0x152a <isalpha>
    151e:	8f 91       	pop	r24
    1520:	09 f0       	breq	.+2      	; 0x1524 <tolower+0xa>
    1522:	80 62       	ori	r24, 0x20	; 32
    1524:	08 95       	ret

00001526 <isupper>:
    1526:	85 fd       	sbrc	r24, 5
    1528:	17 c0       	rjmp	.+46     	; 0x1558 <__ctype_isfalse>

0000152a <isalpha>:
    152a:	80 62       	ori	r24, 0x20	; 32

0000152c <islower>:
    152c:	91 11       	cpse	r25, r1
    152e:	14 c0       	rjmp	.+40     	; 0x1558 <__ctype_isfalse>
    1530:	81 36       	cpi	r24, 0x61	; 97
    1532:	ec f3       	brlt	.-6      	; 0x152e <islower+0x2>
    1534:	8b 37       	cpi	r24, 0x7B	; 123
    1536:	dc f7       	brge	.-10     	; 0x152e <islower+0x2>
    1538:	08 95       	ret

0000153a <isspace>:
    153a:	91 11       	cpse	r25, r1
    153c:	0d c0       	rjmp	.+26     	; 0x1558 <__ctype_isfalse>
    153e:	80 32       	cpi	r24, 0x20	; 32
    1540:	51 f0       	breq	.+20     	; 0x1556 <isspace+0x1c>
    1542:	8a 30       	cpi	r24, 0x0A	; 10
    1544:	41 f0       	breq	.+16     	; 0x1556 <isspace+0x1c>
    1546:	8c 30       	cpi	r24, 0x0C	; 12
    1548:	31 f0       	breq	.+12     	; 0x1556 <isspace+0x1c>
    154a:	8d 30       	cpi	r24, 0x0D	; 13
    154c:	21 f0       	breq	.+8      	; 0x1556 <isspace+0x1c>
    154e:	89 30       	cpi	r24, 0x09	; 9
    1550:	11 f0       	breq	.+4      	; 0x1556 <isspace+0x1c>
    1552:	8b 30       	cpi	r24, 0x0B	; 11
    1554:	99 f7       	brne	.-26     	; 0x153c <isspace+0x2>
    1556:	08 95       	ret

00001558 <__ctype_isfalse>:
    1558:	99 27       	eor	r25, r25
    155a:	88 27       	eor	r24, r24

0000155c <__ctype_istrue>:
    155c:	08 95       	ret

0000155e <__mulsi3>:
    155e:	62 9f       	mul	r22, r18
    1560:	d0 01       	movw	r26, r0
    1562:	73 9f       	mul	r23, r19
    1564:	f0 01       	movw	r30, r0
    1566:	82 9f       	mul	r24, r18
    1568:	e0 0d       	add	r30, r0
    156a:	f1 1d       	adc	r31, r1
    156c:	64 9f       	mul	r22, r20
    156e:	e0 0d       	add	r30, r0
    1570:	f1 1d       	adc	r31, r1
    1572:	92 9f       	mul	r25, r18
    1574:	f0 0d       	add	r31, r0
    1576:	83 9f       	mul	r24, r19
    1578:	f0 0d       	add	r31, r0
    157a:	74 9f       	mul	r23, r20
    157c:	f0 0d       	add	r31, r0
    157e:	65 9f       	mul	r22, r21
    1580:	f0 0d       	add	r31, r0
    1582:	99 27       	eor	r25, r25
    1584:	72 9f       	mul	r23, r18
    1586:	b0 0d       	add	r27, r0
    1588:	e1 1d       	adc	r30, r1
    158a:	f9 1f       	adc	r31, r25
    158c:	63 9f       	mul	r22, r19
    158e:	b0 0d       	add	r27, r0
    1590:	e1 1d       	adc	r30, r1
    1592:	f9 1f       	adc	r31, r25
    1594:	bd 01       	movw	r22, r26
    1596:	cf 01       	movw	r24, r30
    1598:	11 24       	eor	r1, r1
    159a:	08 95       	ret

0000159c <__udivmodsi4>:
    159c:	a1 e2       	ldi	r26, 0x21	; 33
    159e:	1a 2e       	mov	r1, r26
    15a0:	aa 1b       	sub	r26, r26
    15a2:	bb 1b       	sub	r27, r27
    15a4:	fd 01       	movw	r30, r26
    15a6:	0d c0       	rjmp	.+26     	; 0x15c2 <__udivmodsi4_ep>

000015a8 <__udivmodsi4_loop>:
    15a8:	aa 1f       	adc	r26, r26
    15aa:	bb 1f       	adc	r27, r27
    15ac:	ee 1f       	adc	r30, r30
    15ae:	ff 1f       	adc	r31, r31
    15b0:	a2 17       	cp	r26, r18
    15b2:	b3 07       	cpc	r27, r19
    15b4:	e4 07       	cpc	r30, r20
    15b6:	f5 07       	cpc	r31, r21
    15b8:	20 f0       	brcs	.+8      	; 0x15c2 <__udivmodsi4_ep>
    15ba:	a2 1b       	sub	r26, r18
    15bc:	b3 0b       	sbc	r27, r19
    15be:	e4 0b       	sbc	r30, r20
    15c0:	f5 0b       	sbc	r31, r21

000015c2 <__udivmodsi4_ep>:
    15c2:	66 1f       	adc	r22, r22
    15c4:	77 1f       	adc	r23, r23
    15c6:	88 1f       	adc	r24, r24
    15c8:	99 1f       	adc	r25, r25
    15ca:	1a 94       	dec	r1
    15cc:	69 f7       	brne	.-38     	; 0x15a8 <__udivmodsi4_loop>
    15ce:	60 95       	com	r22
    15d0:	70 95       	com	r23
    15d2:	80 95       	com	r24
    15d4:	90 95       	com	r25
    15d6:	9b 01       	movw	r18, r22
    15d8:	ac 01       	movw	r20, r24
    15da:	bd 01       	movw	r22, r26
    15dc:	cf 01       	movw	r24, r30
    15de:	08 95       	ret

000015e0 <_exit>:
    15e0:	ff cf       	rjmp	.-2      	; 0x15e0 <_exit>
